<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class BoardingRequestParams implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $creditCheckToken;

    /**
     * @var GroupInfo|null
     */
    private $groupInfo;

    /**
     * @var ScarecrowApplication
     */
    private $scarecrowApplication;

    /**
     * @var string|null
     */
    private $profileCode;

    /**
     * @var string|null
     */
    private $documentPacketId;

    /**
     * @param ScarecrowApplication $scarecrowApplication
     */
    public function __construct(ScarecrowApplication $scarecrowApplication)
    {
        $this->scarecrowApplication = $scarecrowApplication;
    }

    /**
     * Returns Credit Check Token.
     * [EU] Token provided by credit check response
     */
    public function getCreditCheckToken(): ?string
    {
        return $this->creditCheckToken;
    }

    /**
     * Sets Credit Check Token.
     * [EU] Token provided by credit check response
     *
     * @maps creditCheckToken
     */
    public function setCreditCheckToken(?string $creditCheckToken): void
    {
        $this->creditCheckToken = $creditCheckToken;
    }

    /**
     * Returns Group Info.
     */
    public function getGroupInfo(): ?GroupInfo
    {
        return $this->groupInfo;
    }

    /**
     * Sets Group Info.
     *
     * @maps groupInfo
     */
    public function setGroupInfo(?GroupInfo $groupInfo): void
    {
        $this->groupInfo = $groupInfo;
    }

    /**
     * Returns Scarecrow Application.
     */
    public function getScarecrowApplication(): ScarecrowApplication
    {
        return $this->scarecrowApplication;
    }

    /**
     * Sets Scarecrow Application.
     *
     * @required
     * @maps scarecrowApplication
     */
    public function setScarecrowApplication(ScarecrowApplication $scarecrowApplication): void
    {
        $this->scarecrowApplication = $scarecrowApplication;
    }

    /**
     * Returns Profile Code.
     * The partner's profile code
     */
    public function getProfileCode(): ?string
    {
        return $this->profileCode;
    }

    /**
     * Sets Profile Code.
     * The partner's profile code
     *
     * @maps profileCode
     */
    public function setProfileCode(?string $profileCode): void
    {
        $this->profileCode = $profileCode;
    }

    /**
     * Returns Document Packet Id.
     * The unique identifier for the document packet. For use with createdocumentpacket
     */
    public function getDocumentPacketId(): ?string
    {
        return $this->documentPacketId;
    }

    /**
     * Sets Document Packet Id.
     * The unique identifier for the document packet. For use with createdocumentpacket
     *
     * @maps documentPacketId
     */
    public function setDocumentPacketId(?string $documentPacketId): void
    {
        $this->documentPacketId = $documentPacketId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->creditCheckToken)) {
            $json['creditCheckToken'] = $this->creditCheckToken;
        }
        if (isset($this->groupInfo)) {
            $json['groupInfo']        = $this->groupInfo;
        }
        $json['scarecrowApplication'] = $this->scarecrowApplication;
        if (isset($this->profileCode)) {
            $json['profileCode']      = $this->profileCode;
        }
        if (isset($this->documentPacketId)) {
            $json['documentPacketId'] = $this->documentPacketId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
