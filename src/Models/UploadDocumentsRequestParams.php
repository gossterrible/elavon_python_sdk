<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class UploadDocumentsRequestParams implements \JsonSerializable
{
    /**
     * @var string
     */
    private $boardingId;

    /**
     * @var string
     */
    private $clientId;

    /**
     * @var string
     */
    private $uniqueId;

    /**
     * @var string
     */
    private $country;

    /**
     * @var string
     */
    private $salesRepNumber;

    /**
     * @var ImageDocumentData
     */
    private $imageDocumentData;

    /**
     * @param string $boardingId
     * @param string $clientId
     * @param string $uniqueId
     * @param string $country
     * @param string $salesRepNumber
     * @param ImageDocumentData $imageDocumentData
     */
    public function __construct(
        string $boardingId,
        string $clientId,
        string $uniqueId,
        string $country,
        string $salesRepNumber,
        ImageDocumentData $imageDocumentData
    ) {
        $this->boardingId = $boardingId;
        $this->clientId = $clientId;
        $this->uniqueId = $uniqueId;
        $this->country = $country;
        $this->salesRepNumber = $salesRepNumber;
        $this->imageDocumentData = $imageDocumentData;
    }

    /**
     * Returns Boarding Id.
     * MID(EU)/AWB(NA) of application to upload documents for, MID can be used in NA if it has been
     * generated
     */
    public function getBoardingId(): string
    {
        return $this->boardingId;
    }

    /**
     * Sets Boarding Id.
     * MID(EU)/AWB(NA) of application to upload documents for, MID can be used in NA if it has been
     * generated
     *
     * @required
     * @maps boardingId
     */
    public function setBoardingId(string $boardingId): void
    {
        $this->boardingId = $boardingId;
    }

    /**
     * Returns Client Id.
     * Client id of application submission, to be provided to partners, and should match value present on
     * boarding request
     */
    public function getClientId(): string
    {
        return $this->clientId;
    }

    /**
     * Sets Client Id.
     * Client id of application submission, to be provided to partners, and should match value present on
     * boarding request
     *
     * @required
     * @maps clientId
     */
    public function setClientId(string $clientId): void
    {
        $this->clientId = $clientId;
    }

    /**
     * Returns Unique Id.
     * Unique identifier of application submission, alphanumeric. Provided by the client.The uniqueId
     * must be wholly original and never repeated. The client's name followed by a millisecond timestamp
     * would work well.
     */
    public function getUniqueId(): string
    {
        return $this->uniqueId;
    }

    /**
     * Sets Unique Id.
     * Unique identifier of application submission, alphanumeric. Provided by the client.The uniqueId
     * must be wholly original and never repeated. The client's name followed by a millisecond timestamp
     * would work well.
     *
     * @required
     * @maps uniqueId
     */
    public function setUniqueId(string $uniqueId): void
    {
        $this->uniqueId = $uniqueId;
    }

    /**
     * Returns Country.
     * Country of application submission, ISO 3166-1 alpha-3 standard applies, and should match value
     * present on boarding request
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Country of application submission, ISO 3166-1 alpha-3 standard applies, and should match value
     * present on boarding request
     *
     * @required
     * @maps country
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Sales Rep Number.
     * Identifier of sales representative responsible for submission, should match value present on
     * boarding request
     */
    public function getSalesRepNumber(): string
    {
        return $this->salesRepNumber;
    }

    /**
     * Sets Sales Rep Number.
     * Identifier of sales representative responsible for submission, should match value present on
     * boarding request
     *
     * @required
     * @maps salesRepNumber
     */
    public function setSalesRepNumber(string $salesRepNumber): void
    {
        $this->salesRepNumber = $salesRepNumber;
    }

    /**
     * Returns Image Document Data.
     */
    public function getImageDocumentData(): ImageDocumentData
    {
        return $this->imageDocumentData;
    }

    /**
     * Sets Image Document Data.
     *
     * @required
     * @maps imageDocumentData
     */
    public function setImageDocumentData(ImageDocumentData $imageDocumentData): void
    {
        $this->imageDocumentData = $imageDocumentData;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['boardingId']        = $this->boardingId;
        $json['clientId']          = $this->clientId;
        $json['uniqueId']          = $this->uniqueId;
        $json['country']           = $this->country;
        $json['salesRepNumber']    = $this->salesRepNumber;
        $json['imageDocumentData'] = $this->imageDocumentData;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
