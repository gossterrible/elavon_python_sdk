<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class AddressFields implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $simpleValue;

    /**
     * @var string|null
     */
    private $houseNumber;

    /**
     * @var string|null
     */
    private $street;

    /**
     * @var string|null
     */
    private $street2;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $county;

    /**
     * @var string|null
     */
    private $province;

    /**
     * @var string|null
     */
    private $postCode;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $countryCode;

    /**
     * @var string|null
     */
    private $addressClassification;

    /**
     * @var string|null
     */
    private $telephone;

    /**
     * @var PhoneFields|null
     */
    private $phoneFields;

    /**
     * @var string|null
     */
    private $locationId;

    /**
     * @var string|null
     */
    private $addressType;

    /**
     * Returns Simple Value.
     */
    public function getSimpleValue(): ?string
    {
        return $this->simpleValue;
    }

    /**
     * Sets Simple Value.
     *
     * @maps simpleValue
     */
    public function setSimpleValue(?string $simpleValue): void
    {
        $this->simpleValue = $simpleValue;
    }

    /**
     * Returns House Number.
     */
    public function getHouseNumber(): ?string
    {
        return $this->houseNumber;
    }

    /**
     * Sets House Number.
     *
     * @maps houseNumber
     */
    public function setHouseNumber(?string $houseNumber): void
    {
        $this->houseNumber = $houseNumber;
    }

    /**
     * Returns Street.
     */
    public function getStreet(): ?string
    {
        return $this->street;
    }

    /**
     * Sets Street.
     *
     * @maps street
     */
    public function setStreet(?string $street): void
    {
        $this->street = $street;
    }

    /**
     * Returns Street 2.
     */
    public function getStreet2(): ?string
    {
        return $this->street2;
    }

    /**
     * Sets Street 2.
     *
     * @maps street2
     */
    public function setStreet2(?string $street2): void
    {
        $this->street2 = $street2;
    }

    /**
     * Returns City.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns County.
     */
    public function getCounty(): ?string
    {
        return $this->county;
    }

    /**
     * Sets County.
     *
     * @maps county
     */
    public function setCounty(?string $county): void
    {
        $this->county = $county;
    }

    /**
     * Returns Province.
     */
    public function getProvince(): ?string
    {
        return $this->province;
    }

    /**
     * Sets Province.
     *
     * @maps province
     */
    public function setProvince(?string $province): void
    {
        $this->province = $province;
    }

    /**
     * Returns Post Code.
     */
    public function getPostCode(): ?string
    {
        return $this->postCode;
    }

    /**
     * Sets Post Code.
     *
     * @maps postCode
     */
    public function setPostCode(?string $postCode): void
    {
        $this->postCode = $postCode;
    }

    /**
     * Returns Country.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Country Code.
     */
    public function getCountryCode(): ?string
    {
        return $this->countryCode;
    }

    /**
     * Sets Country Code.
     *
     * @maps countryCode
     */
    public function setCountryCode(?string $countryCode): void
    {
        $this->countryCode = $countryCode;
    }

    /**
     * Returns Address Classification.
     */
    public function getAddressClassification(): ?string
    {
        return $this->addressClassification;
    }

    /**
     * Sets Address Classification.
     *
     * @maps addressClassification
     */
    public function setAddressClassification(?string $addressClassification): void
    {
        $this->addressClassification = $addressClassification;
    }

    /**
     * Returns Telephone.
     */
    public function getTelephone(): ?string
    {
        return $this->telephone;
    }

    /**
     * Sets Telephone.
     *
     * @maps telephone
     */
    public function setTelephone(?string $telephone): void
    {
        $this->telephone = $telephone;
    }

    /**
     * Returns Phone Fields.
     */
    public function getPhoneFields(): ?PhoneFields
    {
        return $this->phoneFields;
    }

    /**
     * Sets Phone Fields.
     *
     * @maps phoneFields
     */
    public function setPhoneFields(?PhoneFields $phoneFields): void
    {
        $this->phoneFields = $phoneFields;
    }

    /**
     * Returns Location Id.
     */
    public function getLocationId(): ?string
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     *
     * @maps locationId
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Address Type.
     */
    public function getAddressType(): ?string
    {
        return $this->addressType;
    }

    /**
     * Sets Address Type.
     *
     * @maps addressType
     */
    public function setAddressType(?string $addressType): void
    {
        $this->addressType = $addressType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->simpleValue)) {
            $json['simpleValue']           = $this->simpleValue;
        }
        if (isset($this->houseNumber)) {
            $json['houseNumber']           = $this->houseNumber;
        }
        if (isset($this->street)) {
            $json['street']                = $this->street;
        }
        if (isset($this->street2)) {
            $json['street2']               = $this->street2;
        }
        if (isset($this->city)) {
            $json['city']                  = $this->city;
        }
        if (isset($this->county)) {
            $json['county']                = $this->county;
        }
        if (isset($this->province)) {
            $json['province']              = $this->province;
        }
        if (isset($this->postCode)) {
            $json['postCode']              = $this->postCode;
        }
        if (isset($this->country)) {
            $json['country']               = $this->country;
        }
        if (isset($this->countryCode)) {
            $json['countryCode']           = $this->countryCode;
        }
        if (isset($this->addressClassification)) {
            $json['addressClassification'] = $this->addressClassification;
        }
        if (isset($this->telephone)) {
            $json['telephone']             = $this->telephone;
        }
        if (isset($this->phoneFields)) {
            $json['phoneFields']           = $this->phoneFields;
        }
        if (isset($this->locationId)) {
            $json['locationId']            = $this->locationId;
        }
        if (isset($this->addressType)) {
            $json['addressType']           = $this->addressType;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
