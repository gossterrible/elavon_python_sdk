<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

/**
 * A container that holds the date (day, month, and year)
 */
class DateComponents implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $year;

    /**
     * @var string|null
     */
    private $month;

    /**
     * @var int|null
     */
    private $day;

    /**
     * Returns Year.
     */
    public function getYear(): ?int
    {
        return $this->year;
    }

    /**
     * Sets Year.
     *
     * @maps year
     */
    public function setYear(?int $year): void
    {
        $this->year = $year;
    }

    /**
     * Returns Month.
     */
    public function getMonth(): ?string
    {
        return $this->month;
    }

    /**
     * Sets Month.
     *
     * @maps month
     * @factory \SwaggerScarecrowLib\Models\MonthEnum::checkValue
     */
    public function setMonth(?string $month): void
    {
        $this->month = $month;
    }

    /**
     * Returns Day.
     */
    public function getDay(): ?int
    {
        return $this->day;
    }

    /**
     * Sets Day.
     *
     * @maps day
     */
    public function setDay(?int $day): void
    {
        $this->day = $day;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->year)) {
            $json['year']  = $this->year;
        }
        if (isset($this->month)) {
            $json['month'] = MonthEnum::checkValue($this->month);
        }
        if (isset($this->day)) {
            $json['day']   = $this->day;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
