<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class GetTerminalIdsResponse implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $responseId;

    /**
     * @var string|null
     */
    private $error;

    /**
     * @var string|null
     */
    private $welcomeUrl;

    /**
     * @var string|null
     */
    private $virtualId;

    /**
     * @var string|null
     */
    private $terminalBin;

    /**
     * @var array|null
     */
    private $terminalIdDataMap;

    /**
     * Returns Response Id.
     */
    public function getResponseId(): ?int
    {
        return $this->responseId;
    }

    /**
     * Sets Response Id.
     *
     * @maps responseId
     */
    public function setResponseId(?int $responseId): void
    {
        $this->responseId = $responseId;
    }

    /**
     * Returns Error.
     * If processing error occurs, will contain information, else will be empty or null
     */
    public function getError(): ?string
    {
        return $this->error;
    }

    /**
     * Sets Error.
     * If processing error occurs, will contain information, else will be empty or null
     *
     * @maps error
     */
    public function setError(?string $error): void
    {
        $this->error = $error;
    }

    /**
     * Returns Welcome Url.
     * Welcome to Converge URL, typically provided to costomer via email
     */
    public function getWelcomeUrl(): ?string
    {
        return $this->welcomeUrl;
    }

    /**
     * Sets Welcome Url.
     * Welcome to Converge URL, typically provided to costomer via email
     *
     * @maps welcomeUrl
     */
    public function setWelcomeUrl(?string $welcomeUrl): void
    {
        $this->welcomeUrl = $welcomeUrl;
    }

    /**
     * Returns Virtual Id.
     * Virtual Id, for Converge
     */
    public function getVirtualId(): ?string
    {
        return $this->virtualId;
    }

    /**
     * Sets Virtual Id.
     * Virtual Id, for Converge
     *
     * @maps virtualId
     */
    public function setVirtualId(?string $virtualId): void
    {
        $this->virtualId = $virtualId;
    }

    /**
     * Returns Terminal Bin.
     * Terminal BIN
     */
    public function getTerminalBin(): ?string
    {
        return $this->terminalBin;
    }

    /**
     * Sets Terminal Bin.
     * Terminal BIN
     *
     * @maps terminalBin
     */
    public function setTerminalBin(?string $terminalBin): void
    {
        $this->terminalBin = $terminalBin;
    }

    /**
     * Returns Terminal Id Data Map.
     * Map of item code to various Converge data properties
     */
    public function getTerminalIdDataMap(): ?array
    {
        return $this->terminalIdDataMap;
    }

    /**
     * Sets Terminal Id Data Map.
     * Map of item code to various Converge data properties
     *
     * @maps terminalIdDataMap
     */
    public function setTerminalIdDataMap(?array $terminalIdDataMap): void
    {
        $this->terminalIdDataMap = $terminalIdDataMap;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->responseId)) {
            $json['responseId']        = $this->responseId;
        }
        if (isset($this->error)) {
            $json['error']             = $this->error;
        }
        if (isset($this->welcomeUrl)) {
            $json['welcomeUrl']        = $this->welcomeUrl;
        }
        if (isset($this->virtualId)) {
            $json['virtualId']         = $this->virtualId;
        }
        if (isset($this->terminalBin)) {
            $json['terminalBin']       = $this->terminalBin;
        }
        if (isset($this->terminalIdDataMap)) {
            $json['terminalIdDataMap'] = $this->terminalIdDataMap;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
