<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class EquipmentOption implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $integratorCode;

    /**
     * @var string|null
     */
    private $ciersNumber;

    /**
     * @var string|null
     */
    private $serialNumber;

    /**
     * @var string|null
     */
    private $modelNumber;

    /**
     * @var string|null
     */
    private $ecrType;

    /**
     * @var string|null
     */
    private $ecrMode;

    /**
     * @var bool|null
     */
    private $printViaEcr;

    /**
     * @var string|null
     */
    private $ecrIntegrator;

    /**
     * @var string|null
     */
    private $ecrCableType;

    /**
     * @var string|null
     */
    private $epgIntegrationType;

    /**
     * @var string|null
     */
    private $baxNumber;

    /**
     * @var DateComponents|null
     */
    private $baxEffectiveDate;

    /**
     * Returns Integrator Code.
     */
    public function getIntegratorCode(): ?string
    {
        return $this->integratorCode;
    }

    /**
     * Sets Integrator Code.
     *
     * @maps integratorCode
     */
    public function setIntegratorCode(?string $integratorCode): void
    {
        $this->integratorCode = $integratorCode;
    }

    /**
     * Returns Ciers Number.
     */
    public function getCiersNumber(): ?string
    {
        return $this->ciersNumber;
    }

    /**
     * Sets Ciers Number.
     *
     * @maps ciersNumber
     */
    public function setCiersNumber(?string $ciersNumber): void
    {
        $this->ciersNumber = $ciersNumber;
    }

    /**
     * Returns Serial Number.
     */
    public function getSerialNumber(): ?string
    {
        return $this->serialNumber;
    }

    /**
     * Sets Serial Number.
     *
     * @maps serialNumber
     */
    public function setSerialNumber(?string $serialNumber): void
    {
        $this->serialNumber = $serialNumber;
    }

    /**
     * Returns Model Number.
     */
    public function getModelNumber(): ?string
    {
        return $this->modelNumber;
    }

    /**
     * Sets Model Number.
     *
     * @maps modelNumber
     */
    public function setModelNumber(?string $modelNumber): void
    {
        $this->modelNumber = $modelNumber;
    }

    /**
     * Returns Ecr Type.
     */
    public function getEcrType(): ?string
    {
        return $this->ecrType;
    }

    /**
     * Sets Ecr Type.
     *
     * @maps ecrType
     * @factory \SwaggerScarecrowLib\Models\EcrTypeEnum::checkValue
     */
    public function setEcrType(?string $ecrType): void
    {
        $this->ecrType = $ecrType;
    }

    /**
     * Returns Ecr Mode.
     */
    public function getEcrMode(): ?string
    {
        return $this->ecrMode;
    }

    /**
     * Sets Ecr Mode.
     *
     * @maps ecrMode
     * @factory \SwaggerScarecrowLib\Models\EcrModeEnum::checkValue
     */
    public function setEcrMode(?string $ecrMode): void
    {
        $this->ecrMode = $ecrMode;
    }

    /**
     * Returns Print Via Ecr.
     */
    public function getPrintViaEcr(): ?bool
    {
        return $this->printViaEcr;
    }

    /**
     * Sets Print Via Ecr.
     *
     * @maps printViaEcr
     */
    public function setPrintViaEcr(?bool $printViaEcr): void
    {
        $this->printViaEcr = $printViaEcr;
    }

    /**
     * Returns Ecr Integrator.
     */
    public function getEcrIntegrator(): ?string
    {
        return $this->ecrIntegrator;
    }

    /**
     * Sets Ecr Integrator.
     *
     * @maps ecrIntegrator
     * @factory \SwaggerScarecrowLib\Models\EcrIntegratorEnum::checkValue
     */
    public function setEcrIntegrator(?string $ecrIntegrator): void
    {
        $this->ecrIntegrator = $ecrIntegrator;
    }

    /**
     * Returns Ecr Cable Type.
     */
    public function getEcrCableType(): ?string
    {
        return $this->ecrCableType;
    }

    /**
     * Sets Ecr Cable Type.
     *
     * @maps ecrCableType
     * @factory \SwaggerScarecrowLib\Models\EcrCableTypeEnum::checkValue
     */
    public function setEcrCableType(?string $ecrCableType): void
    {
        $this->ecrCableType = $ecrCableType;
    }

    /**
     * Returns Epg Integration Type.
     */
    public function getEpgIntegrationType(): ?string
    {
        return $this->epgIntegrationType;
    }

    /**
     * Sets Epg Integration Type.
     *
     * @maps epgIntegrationType
     * @factory \SwaggerScarecrowLib\Models\EpgIntegrationTypeEnum::checkValue
     */
    public function setEpgIntegrationType(?string $epgIntegrationType): void
    {
        $this->epgIntegrationType = $epgIntegrationType;
    }

    /**
     * Returns Bax Number.
     */
    public function getBaxNumber(): ?string
    {
        return $this->baxNumber;
    }

    /**
     * Sets Bax Number.
     *
     * @maps baxNumber
     */
    public function setBaxNumber(?string $baxNumber): void
    {
        $this->baxNumber = $baxNumber;
    }

    /**
     * Returns Bax Effective Date.
     * A container that holds the date (day, month, and year)
     */
    public function getBaxEffectiveDate(): ?DateComponents
    {
        return $this->baxEffectiveDate;
    }

    /**
     * Sets Bax Effective Date.
     * A container that holds the date (day, month, and year)
     *
     * @maps baxEffectiveDate
     */
    public function setBaxEffectiveDate(?DateComponents $baxEffectiveDate): void
    {
        $this->baxEffectiveDate = $baxEffectiveDate;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->integratorCode)) {
            $json['integratorCode']     = $this->integratorCode;
        }
        if (isset($this->ciersNumber)) {
            $json['ciersNumber']        = $this->ciersNumber;
        }
        if (isset($this->serialNumber)) {
            $json['serialNumber']       = $this->serialNumber;
        }
        if (isset($this->modelNumber)) {
            $json['modelNumber']        = $this->modelNumber;
        }
        if (isset($this->ecrType)) {
            $json['ecrType']            = EcrTypeEnum::checkValue($this->ecrType);
        }
        if (isset($this->ecrMode)) {
            $json['ecrMode']            = EcrModeEnum::checkValue($this->ecrMode);
        }
        if (isset($this->printViaEcr)) {
            $json['printViaEcr']        = $this->printViaEcr;
        }
        if (isset($this->ecrIntegrator)) {
            $json['ecrIntegrator']      = EcrIntegratorEnum::checkValue($this->ecrIntegrator);
        }
        if (isset($this->ecrCableType)) {
            $json['ecrCableType']       = EcrCableTypeEnum::checkValue($this->ecrCableType);
        }
        if (isset($this->epgIntegrationType)) {
            $json['epgIntegrationType'] = EpgIntegrationTypeEnum::checkValue($this->epgIntegrationType);
        }
        if (isset($this->baxNumber)) {
            $json['baxNumber']          = $this->baxNumber;
        }
        if (isset($this->baxEffectiveDate)) {
            $json['baxEffectiveDate']   = $this->baxEffectiveDate;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
