<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class PhoneFields implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $simpleValue;

    /**
     * @var string|null
     */
    private $countryDialCode;

    /**
     * @var string|null
     */
    private $areaCode;

    /**
     * @var string|null
     */
    private $prefix;

    /**
     * @var string|null
     */
    private $lineNumber;

    /**
     * @var string|null
     */
    private $prefixAndNumber;

    /**
     * @var string|null
     */
    private $extension;

    /**
     * @var string|null
     */
    private $phonetype;

    /**
     * Returns Simple Value.
     */
    public function getSimpleValue(): ?string
    {
        return $this->simpleValue;
    }

    /**
     * Sets Simple Value.
     *
     * @maps simpleValue
     */
    public function setSimpleValue(?string $simpleValue): void
    {
        $this->simpleValue = $simpleValue;
    }

    /**
     * Returns Country Dial Code.
     */
    public function getCountryDialCode(): ?string
    {
        return $this->countryDialCode;
    }

    /**
     * Sets Country Dial Code.
     *
     * @maps countryDialCode
     */
    public function setCountryDialCode(?string $countryDialCode): void
    {
        $this->countryDialCode = $countryDialCode;
    }

    /**
     * Returns Area Code.
     */
    public function getAreaCode(): ?string
    {
        return $this->areaCode;
    }

    /**
     * Sets Area Code.
     *
     * @maps areaCode
     */
    public function setAreaCode(?string $areaCode): void
    {
        $this->areaCode = $areaCode;
    }

    /**
     * Returns Prefix.
     */
    public function getPrefix(): ?string
    {
        return $this->prefix;
    }

    /**
     * Sets Prefix.
     *
     * @maps prefix
     */
    public function setPrefix(?string $prefix): void
    {
        $this->prefix = $prefix;
    }

    /**
     * Returns Line Number.
     */
    public function getLineNumber(): ?string
    {
        return $this->lineNumber;
    }

    /**
     * Sets Line Number.
     *
     * @maps lineNumber
     */
    public function setLineNumber(?string $lineNumber): void
    {
        $this->lineNumber = $lineNumber;
    }

    /**
     * Returns Prefix and Number.
     */
    public function getPrefixAndNumber(): ?string
    {
        return $this->prefixAndNumber;
    }

    /**
     * Sets Prefix and Number.
     *
     * @maps prefixAndNumber
     */
    public function setPrefixAndNumber(?string $prefixAndNumber): void
    {
        $this->prefixAndNumber = $prefixAndNumber;
    }

    /**
     * Returns Extension.
     */
    public function getExtension(): ?string
    {
        return $this->extension;
    }

    /**
     * Sets Extension.
     *
     * @maps extension
     */
    public function setExtension(?string $extension): void
    {
        $this->extension = $extension;
    }

    /**
     * Returns Phonetype.
     */
    public function getPhonetype(): ?string
    {
        return $this->phonetype;
    }

    /**
     * Sets Phonetype.
     *
     * @maps phonetype
     */
    public function setPhonetype(?string $phonetype): void
    {
        $this->phonetype = $phonetype;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->simpleValue)) {
            $json['simpleValue']     = $this->simpleValue;
        }
        if (isset($this->countryDialCode)) {
            $json['countryDialCode'] = $this->countryDialCode;
        }
        if (isset($this->areaCode)) {
            $json['areaCode']        = $this->areaCode;
        }
        if (isset($this->prefix)) {
            $json['prefix']          = $this->prefix;
        }
        if (isset($this->lineNumber)) {
            $json['lineNumber']      = $this->lineNumber;
        }
        if (isset($this->prefixAndNumber)) {
            $json['prefixAndNumber'] = $this->prefixAndNumber;
        }
        if (isset($this->extension)) {
            $json['extension']       = $this->extension;
        }
        if (isset($this->phonetype)) {
            $json['phonetype']       = $this->phonetype;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
