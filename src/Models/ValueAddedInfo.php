<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class ValueAddedInfo implements \JsonSerializable
{
    /**
     * @var array<string,bool>|null
     */
    private $valueAdds;

    /**
     * @var EbtInfo|null
     */
    private $ebtInfo;

    /**
     * @var EcsInfo|null
     */
    private $ecsInfo;

    /**
     * @var AcsInfo|null
     */
    private $acsInfo;

    /**
     * @var FanfareInfo|null
     */
    private $fanfareInfo;

    /**
     * @var string|null
     */
    private $gsmPrepaidType;

    /**
     * @var string|null
     */
    private $surchargeManagedBy;

    /**
     * @var string|null
     */
    private $creditSurchargeAmt;

    /**
     * @var Efs3dSecureInfo|null
     */
    private $efs3dSecureInfo;

    /**
     * @var StraightSendInfo|null
     */
    private $straightSendInfo;

    /**
     * @var OnDemandInfo|null
     */
    private $onDemandInfo;

    /**
     * @var OcmInfo|null
     */
    private $ocmInfo;

    /**
     * Returns Value Adds.
     * Boolean map to indicate presence of various value added services, true if present, false/null if
     * absent.The valid keys are as follows: FANFARE, ELECTRONIC_CHECKING_SERVICE, CREDIT_CARD_SURCHARGING,
     * CASH_BACK, MERCHANT_CONNECT_PREMIUM, CONTACTLESS, CONVERGE_BILLING_AND_INVOICE, CONVERGE_HOSPITALITY,
     * E_TOKENIZATION, SECURED_ENCRYPT, HEALTH_CARE_ELIGIBILITY, HEALTH_CARE_CLAIMS,
     * HEALTH_CARE_REMITTANCE, HEALTH_CARE_ELIGIBILITY_AND_ESTIMATOR, HEALTH_CARE_PATIENT_BILLING,
     * FRAUD_SERVICES_3D_SECURE, STRAIGHT_SEND, ON_DEMAND
     *
     * @return array<string,bool>|null
     */
    public function getValueAdds(): ?array
    {
        return $this->valueAdds;
    }

    /**
     * Sets Value Adds.
     * Boolean map to indicate presence of various value added services, true if present, false/null if
     * absent.The valid keys are as follows: FANFARE, ELECTRONIC_CHECKING_SERVICE, CREDIT_CARD_SURCHARGING,
     * CASH_BACK, MERCHANT_CONNECT_PREMIUM, CONTACTLESS, CONVERGE_BILLING_AND_INVOICE, CONVERGE_HOSPITALITY,
     * E_TOKENIZATION, SECURED_ENCRYPT, HEALTH_CARE_ELIGIBILITY, HEALTH_CARE_CLAIMS,
     * HEALTH_CARE_REMITTANCE, HEALTH_CARE_ELIGIBILITY_AND_ESTIMATOR, HEALTH_CARE_PATIENT_BILLING,
     * FRAUD_SERVICES_3D_SECURE, STRAIGHT_SEND, ON_DEMAND
     *
     * @maps valueAdds
     *
     * @param array<string,bool>|null $valueAdds
     */
    public function setValueAdds(?array $valueAdds): void
    {
        $this->valueAdds = $valueAdds;
    }

    /**
     * Returns Ebt Info.
     */
    public function getEbtInfo(): ?EbtInfo
    {
        return $this->ebtInfo;
    }

    /**
     * Sets Ebt Info.
     *
     * @maps ebtInfo
     */
    public function setEbtInfo(?EbtInfo $ebtInfo): void
    {
        $this->ebtInfo = $ebtInfo;
    }

    /**
     * Returns Ecs Info.
     */
    public function getEcsInfo(): ?EcsInfo
    {
        return $this->ecsInfo;
    }

    /**
     * Sets Ecs Info.
     *
     * @maps ecsInfo
     */
    public function setEcsInfo(?EcsInfo $ecsInfo): void
    {
        $this->ecsInfo = $ecsInfo;
    }

    /**
     * Returns Acs Info.
     */
    public function getAcsInfo(): ?AcsInfo
    {
        return $this->acsInfo;
    }

    /**
     * Sets Acs Info.
     *
     * @maps acsInfo
     */
    public function setAcsInfo(?AcsInfo $acsInfo): void
    {
        $this->acsInfo = $acsInfo;
    }

    /**
     * Returns Fanfare Info.
     */
    public function getFanfareInfo(): ?FanfareInfo
    {
        return $this->fanfareInfo;
    }

    /**
     * Sets Fanfare Info.
     *
     * @maps fanfareInfo
     */
    public function setFanfareInfo(?FanfareInfo $fanfareInfo): void
    {
        $this->fanfareInfo = $fanfareInfo;
    }

    /**
     * Returns Gsm Prepaid Type.
     * [EU] Additional GSM SIM prepaid information
     */
    public function getGsmPrepaidType(): ?string
    {
        return $this->gsmPrepaidType;
    }

    /**
     * Sets Gsm Prepaid Type.
     * [EU] Additional GSM SIM prepaid information
     *
     * @maps gsmPrepaidType
     * @factory \SwaggerScarecrowLib\Models\GsmPrepaidTypeEnum::checkValue
     */
    public function setGsmPrepaidType(?string $gsmPrepaidType): void
    {
        $this->gsmPrepaidType = $gsmPrepaidType;
    }

    /**
     * Returns Surcharge Managed By.
     * [NA] Surcharge Managed By
     */
    public function getSurchargeManagedBy(): ?string
    {
        return $this->surchargeManagedBy;
    }

    /**
     * Sets Surcharge Managed By.
     * [NA] Surcharge Managed By
     *
     * @maps surchargeManagedBy
     */
    public function setSurchargeManagedBy(?string $surchargeManagedBy): void
    {
        $this->surchargeManagedBy = $surchargeManagedBy;
    }

    /**
     * Returns Credit Surcharge Amt.
     * [NA] Credit Surcharge Amount
     */
    public function getCreditSurchargeAmt(): ?string
    {
        return $this->creditSurchargeAmt;
    }

    /**
     * Sets Credit Surcharge Amt.
     * [NA] Credit Surcharge Amount
     *
     * @maps creditSurchargeAmt
     */
    public function setCreditSurchargeAmt(?string $creditSurchargeAmt): void
    {
        $this->creditSurchargeAmt = $creditSurchargeAmt;
    }

    /**
     * Returns Efs 3 D Secure Info.
     */
    public function getEfs3dSecureInfo(): ?Efs3dSecureInfo
    {
        return $this->efs3dSecureInfo;
    }

    /**
     * Sets Efs 3 D Secure Info.
     *
     * @maps efs3dSecureInfo
     */
    public function setEfs3dSecureInfo(?Efs3dSecureInfo $efs3dSecureInfo): void
    {
        $this->efs3dSecureInfo = $efs3dSecureInfo;
    }

    /**
     * Returns Straight Send Info.
     */
    public function getStraightSendInfo(): ?StraightSendInfo
    {
        return $this->straightSendInfo;
    }

    /**
     * Sets Straight Send Info.
     *
     * @maps straightSendInfo
     */
    public function setStraightSendInfo(?StraightSendInfo $straightSendInfo): void
    {
        $this->straightSendInfo = $straightSendInfo;
    }

    /**
     * Returns On Demand Info.
     */
    public function getOnDemandInfo(): ?OnDemandInfo
    {
        return $this->onDemandInfo;
    }

    /**
     * Sets On Demand Info.
     *
     * @maps onDemandInfo
     */
    public function setOnDemandInfo(?OnDemandInfo $onDemandInfo): void
    {
        $this->onDemandInfo = $onDemandInfo;
    }

    /**
     * Returns Ocm Info.
     */
    public function getOcmInfo(): ?OcmInfo
    {
        return $this->ocmInfo;
    }

    /**
     * Sets Ocm Info.
     *
     * @maps ocmInfo
     */
    public function setOcmInfo(?OcmInfo $ocmInfo): void
    {
        $this->ocmInfo = $ocmInfo;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->valueAdds)) {
            $json['valueAdds']          = $this->valueAdds;
        }
        if (isset($this->ebtInfo)) {
            $json['ebtInfo']            = $this->ebtInfo;
        }
        if (isset($this->ecsInfo)) {
            $json['ecsInfo']            = $this->ecsInfo;
        }
        if (isset($this->acsInfo)) {
            $json['acsInfo']            = $this->acsInfo;
        }
        if (isset($this->fanfareInfo)) {
            $json['fanfareInfo']        = $this->fanfareInfo;
        }
        if (isset($this->gsmPrepaidType)) {
            $json['gsmPrepaidType']     = GsmPrepaidTypeEnum::checkValue($this->gsmPrepaidType);
        }
        if (isset($this->surchargeManagedBy)) {
            $json['surchargeManagedBy'] = $this->surchargeManagedBy;
        }
        if (isset($this->creditSurchargeAmt)) {
            $json['creditSurchargeAmt'] = $this->creditSurchargeAmt;
        }
        if (isset($this->efs3dSecureInfo)) {
            $json['efs3dSecureInfo']    = $this->efs3dSecureInfo;
        }
        if (isset($this->straightSendInfo)) {
            $json['straightSendInfo']   = $this->straightSendInfo;
        }
        if (isset($this->onDemandInfo)) {
            $json['onDemandInfo']       = $this->onDemandInfo;
        }
        if (isset($this->ocmInfo)) {
            $json['ocmInfo']            = $this->ocmInfo;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
