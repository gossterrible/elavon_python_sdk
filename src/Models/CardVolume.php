<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class CardVolume implements \JsonSerializable
{
    /**
     * @var string
     */
    private $visaPercentage;

    /**
     * @var string
     */
    private $masterCardPercentage;

    /**
     * @var string
     */
    private $amexPercentage;

    /**
     * @var string
     */
    private $amexAverageTransaction;

    /**
     * @var string
     */
    private $interacAverageTransaction;

    /**
     * @param string $visaPercentage
     * @param string $masterCardPercentage
     * @param string $amexPercentage
     * @param string $amexAverageTransaction
     * @param string $interacAverageTransaction
     */
    public function __construct(
        string $visaPercentage,
        string $masterCardPercentage,
        string $amexPercentage,
        string $amexAverageTransaction,
        string $interacAverageTransaction
    ) {
        $this->visaPercentage = $visaPercentage;
        $this->masterCardPercentage = $masterCardPercentage;
        $this->amexPercentage = $amexPercentage;
        $this->amexAverageTransaction = $amexAverageTransaction;
        $this->interacAverageTransaction = $interacAverageTransaction;
    }

    /**
     * Returns Visa Percentage.
     * Percentage of Visa transactions as a percentage of Annual Revenue
     */
    public function getVisaPercentage(): string
    {
        return $this->visaPercentage;
    }

    /**
     * Sets Visa Percentage.
     * Percentage of Visa transactions as a percentage of Annual Revenue
     *
     * @required
     * @maps visaPercentage
     */
    public function setVisaPercentage(string $visaPercentage): void
    {
        $this->visaPercentage = $visaPercentage;
    }

    /**
     * Returns Master Card Percentage.
     * Percentage of MasterCard transactions as a percentage of Annual Revenue
     */
    public function getMasterCardPercentage(): string
    {
        return $this->masterCardPercentage;
    }

    /**
     * Sets Master Card Percentage.
     * Percentage of MasterCard transactions as a percentage of Annual Revenue
     *
     * @required
     * @maps masterCardPercentage
     */
    public function setMasterCardPercentage(string $masterCardPercentage): void
    {
        $this->masterCardPercentage = $masterCardPercentage;
    }

    /**
     * Returns Amex Percentage.
     * Percentage of Amex OptBlue transactions as a percentage of Annual Revenue
     */
    public function getAmexPercentage(): string
    {
        return $this->amexPercentage;
    }

    /**
     * Sets Amex Percentage.
     * Percentage of Amex OptBlue transactions as a percentage of Annual Revenue
     *
     * @required
     * @maps amexPercentage
     */
    public function setAmexPercentage(string $amexPercentage): void
    {
        $this->amexPercentage = $amexPercentage;
    }

    /**
     * Returns Amex Average Transaction.
     * Average transaction amount for an Amercian Express OptBlue transaction
     */
    public function getAmexAverageTransaction(): string
    {
        return $this->amexAverageTransaction;
    }

    /**
     * Sets Amex Average Transaction.
     * Average transaction amount for an Amercian Express OptBlue transaction
     *
     * @required
     * @maps amexAverageTransaction
     */
    public function setAmexAverageTransaction(string $amexAverageTransaction): void
    {
        $this->amexAverageTransaction = $amexAverageTransaction;
    }

    /**
     * Returns Interac Average Transaction.
     * Average transaction amount for an Interac debit transaction
     */
    public function getInteracAverageTransaction(): string
    {
        return $this->interacAverageTransaction;
    }

    /**
     * Sets Interac Average Transaction.
     * Average transaction amount for an Interac debit transaction
     *
     * @required
     * @maps interacAverageTransaction
     */
    public function setInteracAverageTransaction(string $interacAverageTransaction): void
    {
        $this->interacAverageTransaction = $interacAverageTransaction;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['visaPercentage']            = $this->visaPercentage;
        $json['masterCardPercentage']      = $this->masterCardPercentage;
        $json['amexPercentage']            = $this->amexPercentage;
        $json['amexAverageTransaction']    = $this->amexAverageTransaction;
        $json['interacAverageTransaction'] = $this->interacAverageTransaction;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
