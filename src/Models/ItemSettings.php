<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class ItemSettings implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $securityLevel;

    /**
     * @var bool|null
     */
    private $semiIntegrated;

    /**
     * @var string
     */
    private $connectionType;

    /**
     * @var string|null
     */
    private $closeMethod;

    /**
     * @var string|null
     */
    private $captureMethod;

    /**
     * @var string|null
     */
    private $qirVendor;

    /**
     * @var array<string,bool>|null
     */
    private $services;

    /**
     * @var EquipmentOption[]|null
     */
    private $options;

    /**
     * @var int|null
     */
    private $bundledThreshHold;

    /**
     * @var string|null
     */
    private $servicePricingCode;

    /**
     * @var string|null
     */
    private $terminalType;

    /**
     * @var bool|null
     */
    private $ingenicoPayTable;

    /**
     * @var string|null
     */
    private $deployType;

    /**
     * @param string $connectionType
     */
    public function __construct(string $connectionType)
    {
        $this->connectionType = $connectionType;
    }

    /**
     * Returns Security Level.
     */
    public function getSecurityLevel(): ?string
    {
        return $this->securityLevel;
    }

    /**
     * Sets Security Level.
     *
     * @maps securityLevel
     * @factory \SwaggerScarecrowLib\Models\SecurityLevelEnum::checkValue
     */
    public function setSecurityLevel(?string $securityLevel): void
    {
        $this->securityLevel = $securityLevel;
    }

    /**
     * Returns Semi Integrated.
     */
    public function getSemiIntegrated(): ?bool
    {
        return $this->semiIntegrated;
    }

    /**
     * Sets Semi Integrated.
     *
     * @maps semiIntegrated
     */
    public function setSemiIntegrated(?bool $semiIntegrated): void
    {
        $this->semiIntegrated = $semiIntegrated;
    }

    /**
     * Returns Connection Type.
     * Connection type of product
     */
    public function getConnectionType(): string
    {
        return $this->connectionType;
    }

    /**
     * Sets Connection Type.
     * Connection type of product
     *
     * @required
     * @maps connectionType
     * @factory \SwaggerScarecrowLib\Models\ConnectionTypeEnum::checkValue
     */
    public function setConnectionType(string $connectionType): void
    {
        $this->connectionType = $connectionType;
    }

    /**
     * Returns Close Method.
     */
    public function getCloseMethod(): ?string
    {
        return $this->closeMethod;
    }

    /**
     * Sets Close Method.
     *
     * @maps closeMethod
     * @factory \SwaggerScarecrowLib\Models\CloseMethodEnum::checkValue
     */
    public function setCloseMethod(?string $closeMethod): void
    {
        $this->closeMethod = $closeMethod;
    }

    /**
     * Returns Capture Method.
     */
    public function getCaptureMethod(): ?string
    {
        return $this->captureMethod;
    }

    /**
     * Sets Capture Method.
     *
     * @maps captureMethod
     * @factory \SwaggerScarecrowLib\Models\CaptureMethodEnum::checkValue
     */
    public function setCaptureMethod(?string $captureMethod): void
    {
        $this->captureMethod = $captureMethod;
    }

    /**
     * Returns Qir Vendor.
     */
    public function getQirVendor(): ?string
    {
        return $this->qirVendor;
    }

    /**
     * Sets Qir Vendor.
     *
     * @maps qirVendor
     */
    public function setQirVendor(?string $qirVendor): void
    {
        $this->qirVendor = $qirVendor;
    }

    /**
     * Returns Services.
     *
     * @return array<string,bool>|null
     */
    public function getServices(): ?array
    {
        return $this->services;
    }

    /**
     * Sets Services.
     *
     * @maps services
     *
     * @param array<string,bool>|null $services
     */
    public function setServices(?array $services): void
    {
        $this->services = $services;
    }

    /**
     * Returns Options.
     *
     * @return EquipmentOption[]|null
     */
    public function getOptions(): ?array
    {
        return $this->options;
    }

    /**
     * Sets Options.
     *
     * @maps options
     *
     * @param EquipmentOption[]|null $options
     */
    public function setOptions(?array $options): void
    {
        $this->options = $options;
    }

    /**
     * Returns Bundled Thresh Hold.
     */
    public function getBundledThreshHold(): ?int
    {
        return $this->bundledThreshHold;
    }

    /**
     * Sets Bundled Thresh Hold.
     *
     * @maps bundledThreshHold
     */
    public function setBundledThreshHold(?int $bundledThreshHold): void
    {
        $this->bundledThreshHold = $bundledThreshHold;
    }

    /**
     * Returns Service Pricing Code.
     */
    public function getServicePricingCode(): ?string
    {
        return $this->servicePricingCode;
    }

    /**
     * Sets Service Pricing Code.
     *
     * @maps servicePricingCode
     * @factory \SwaggerScarecrowLib\Models\ServicePricingCodeEnum::checkValue
     */
    public function setServicePricingCode(?string $servicePricingCode): void
    {
        $this->servicePricingCode = $servicePricingCode;
    }

    /**
     * Returns Terminal Type.
     */
    public function getTerminalType(): ?string
    {
        return $this->terminalType;
    }

    /**
     * Sets Terminal Type.
     *
     * @maps terminalType
     * @factory \SwaggerScarecrowLib\Models\TerminalTypeEnum::checkValue
     */
    public function setTerminalType(?string $terminalType): void
    {
        $this->terminalType = $terminalType;
    }

    /**
     * Returns Ingenico Pay Table.
     */
    public function getIngenicoPayTable(): ?bool
    {
        return $this->ingenicoPayTable;
    }

    /**
     * Sets Ingenico Pay Table.
     *
     * @maps ingenicoPayTable
     */
    public function setIngenicoPayTable(?bool $ingenicoPayTable): void
    {
        $this->ingenicoPayTable = $ingenicoPayTable;
    }

    /**
     * Returns Deploy Type.
     */
    public function getDeployType(): ?string
    {
        return $this->deployType;
    }

    /**
     * Sets Deploy Type.
     *
     * @maps deployType
     * @factory \SwaggerScarecrowLib\Models\DeployTypeEnum::checkValue
     */
    public function setDeployType(?string $deployType): void
    {
        $this->deployType = $deployType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->securityLevel)) {
            $json['securityLevel']      = SecurityLevelEnum::checkValue($this->securityLevel);
        }
        if (isset($this->semiIntegrated)) {
            $json['semiIntegrated']     = $this->semiIntegrated;
        }
        $json['connectionType']         = ConnectionTypeEnum::checkValue($this->connectionType);
        if (isset($this->closeMethod)) {
            $json['closeMethod']        = CloseMethodEnum::checkValue($this->closeMethod);
        }
        if (isset($this->captureMethod)) {
            $json['captureMethod']      = CaptureMethodEnum::checkValue($this->captureMethod);
        }
        if (isset($this->qirVendor)) {
            $json['qirVendor']          = $this->qirVendor;
        }
        if (isset($this->services)) {
            $json['services']           = $this->services;
        }
        if (isset($this->options)) {
            $json['options']            = $this->options;
        }
        if (isset($this->bundledThreshHold)) {
            $json['bundledThreshHold']  = $this->bundledThreshHold;
        }
        if (isset($this->servicePricingCode)) {
            $json['servicePricingCode'] = ServicePricingCodeEnum::checkValue($this->servicePricingCode);
        }
        if (isset($this->terminalType)) {
            $json['terminalType']       = TerminalTypeEnum::checkValue($this->terminalType);
        }
        if (isset($this->ingenicoPayTable)) {
            $json['ingenicoPayTable']   = $this->ingenicoPayTable;
        }
        if (isset($this->deployType)) {
            $json['deployType']         = DeployTypeEnum::checkValue($this->deployType);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
