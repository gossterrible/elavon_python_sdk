<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class Signer implements \JsonSerializable
{
    /**
     * @var string
     */
    private $signerId;

    /**
     * @var Name
     */
    private $signer;

    /**
     * @var string|null
     */
    private $emailAddress;

    /**
     * @var bool
     */
    private $principal;

    /**
     * @var string|null
     */
    private $signingCompleteUrl;

    /**
     * @var string|null
     */
    private $signingDeclineUrl;

    /**
     * @var string|null
     */
    private $signingExpiredUrl;

    /**
     * @var string|null
     */
    private $language;

    /**
     * @var bool|null
     */
    private $optInOut1;

    /**
     * @var bool|null
     */
    private $optInOut2;

    /**
     * @var bool|null
     */
    private $optInOut3;

    /**
     * @param string $signerId
     * @param Name $signer
     * @param bool $principal
     */
    public function __construct(string $signerId, Name $signer, bool $principal)
    {
        $this->signerId = $signerId;
        $this->signer = $signer;
        $this->principal = $principal;
    }

    /**
     * Returns Signer Id.
     * The unique signer identifier
     */
    public function getSignerId(): string
    {
        return $this->signerId;
    }

    /**
     * Sets Signer Id.
     * The unique signer identifier
     *
     * @required
     * @maps signerId
     */
    public function setSignerId(string $signerId): void
    {
        $this->signerId = $signerId;
    }

    /**
     * Returns Signer.
     */
    public function getSigner(): Name
    {
        return $this->signer;
    }

    /**
     * Sets Signer.
     *
     * @required
     * @maps signer
     */
    public function setSigner(Name $signer): void
    {
        $this->signer = $signer;
    }

    /**
     * Returns Email Address.
     * Email Address of signer
     */
    public function getEmailAddress(): ?string
    {
        return $this->emailAddress;
    }

    /**
     * Sets Email Address.
     * Email Address of signer
     *
     * @maps emailAddress
     */
    public function setEmailAddress(?string $emailAddress): void
    {
        $this->emailAddress = $emailAddress;
    }

    /**
     * Returns Principal.
     * Indicator for signer is principal for business entity
     */
    public function getPrincipal(): bool
    {
        return $this->principal;
    }

    /**
     * Sets Principal.
     * Indicator for signer is principal for business entity
     *
     * @required
     * @maps principal
     */
    public function setPrincipal(bool $principal): void
    {
        $this->principal = $principal;
    }

    /**
     * Returns Signing Complete Url.
     * The redirect URL for completed signing
     */
    public function getSigningCompleteUrl(): ?string
    {
        return $this->signingCompleteUrl;
    }

    /**
     * Sets Signing Complete Url.
     * The redirect URL for completed signing
     *
     * @maps signingCompleteUrl
     */
    public function setSigningCompleteUrl(?string $signingCompleteUrl): void
    {
        $this->signingCompleteUrl = $signingCompleteUrl;
    }

    /**
     * Returns Signing Decline Url.
     * The redirect URL for declined signing
     */
    public function getSigningDeclineUrl(): ?string
    {
        return $this->signingDeclineUrl;
    }

    /**
     * Sets Signing Decline Url.
     * The redirect URL for declined signing
     *
     * @maps signingDeclineUrl
     */
    public function setSigningDeclineUrl(?string $signingDeclineUrl): void
    {
        $this->signingDeclineUrl = $signingDeclineUrl;
    }

    /**
     * Returns Signing Expired Url.
     * The redirect URL for expired signing
     */
    public function getSigningExpiredUrl(): ?string
    {
        return $this->signingExpiredUrl;
    }

    /**
     * Sets Signing Expired Url.
     * The redirect URL for expired signing
     *
     * @maps signingExpiredUrl
     */
    public function setSigningExpiredUrl(?string $signingExpiredUrl): void
    {
        $this->signingExpiredUrl = $signingExpiredUrl;
    }

    /**
     * Returns Language.
     * The signer's preferred language
     */
    public function getLanguage(): ?string
    {
        return $this->language;
    }

    /**
     * Sets Language.
     * The signer's preferred language
     *
     * @maps language
     */
    public function setLanguage(?string $language): void
    {
        $this->language = $language;
    }

    /**
     * Returns Opt in Out 1.
     * Indicator for opt in/out for checkobox1
     */
    public function getOptInOut1(): ?bool
    {
        return $this->optInOut1;
    }

    /**
     * Sets Opt in Out 1.
     * Indicator for opt in/out for checkobox1
     *
     * @maps optInOut1
     */
    public function setOptInOut1(?bool $optInOut1): void
    {
        $this->optInOut1 = $optInOut1;
    }

    /**
     * Returns Opt in Out 2.
     * Indicator for opt in/out for checkobox2
     */
    public function getOptInOut2(): ?bool
    {
        return $this->optInOut2;
    }

    /**
     * Sets Opt in Out 2.
     * Indicator for opt in/out for checkobox2
     *
     * @maps optInOut2
     */
    public function setOptInOut2(?bool $optInOut2): void
    {
        $this->optInOut2 = $optInOut2;
    }

    /**
     * Returns Opt in Out 3.
     * Indicator for opt in/out for checkobox3
     */
    public function getOptInOut3(): ?bool
    {
        return $this->optInOut3;
    }

    /**
     * Sets Opt in Out 3.
     * Indicator for opt in/out for checkobox3
     *
     * @maps optInOut3
     */
    public function setOptInOut3(?bool $optInOut3): void
    {
        $this->optInOut3 = $optInOut3;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['signerId']               = $this->signerId;
        $json['signer']                 = $this->signer;
        if (isset($this->emailAddress)) {
            $json['emailAddress']       = $this->emailAddress;
        }
        $json['principal']              = $this->principal;
        if (isset($this->signingCompleteUrl)) {
            $json['signingCompleteUrl'] = $this->signingCompleteUrl;
        }
        if (isset($this->signingDeclineUrl)) {
            $json['signingDeclineUrl']  = $this->signingDeclineUrl;
        }
        if (isset($this->signingExpiredUrl)) {
            $json['signingExpiredUrl']  = $this->signingExpiredUrl;
        }
        if (isset($this->language)) {
            $json['language']           = $this->language;
        }
        if (isset($this->optInOut1)) {
            $json['optInOut1']          = $this->optInOut1;
        }
        if (isset($this->optInOut2)) {
            $json['optInOut2']          = $this->optInOut2;
        }
        if (isset($this->optInOut3)) {
            $json['optInOut3']          = $this->optInOut3;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
