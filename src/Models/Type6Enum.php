<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use Exception;
use stdClass;
use SwaggerScarecrowLib\ApiHelper;

/**
 * Type of terminal service to be provided
 */
class Type6Enum
{
    public const QUICK_CLOSE = 'QUICK_CLOSE';

    public const QUICK_STAY = 'QUICK_STAY';

    public const STORE_AND_FORWARD = 'STORE_AND_FORWARD';

    public const NO_SERVER_PROMPT = 'NO_SERVER_PROMPT';

    public const NO_SIGNATURE = 'NO_SIGNATURE';

    public const NO_TIP = 'NO_TIP';

    public const CONTACTLESS = 'CONTACTLESS';

    public const TERMINAL_AUTO_CLOSE = 'TERMINAL_AUTO_CLOSE';

    public const CLERK_PROMPT = 'CLERK_PROMPT';

    public const CUSTOM_FOOTER = 'CUSTOM_FOOTER';

    public const CASH_BACK_PIN_DEBIT = 'CASH_BACK_PIN_DEBIT';

    public const TIP_FUNCTION_WAITER = 'TIP_FUNCTION_WAITER';

    public const TIP_FUNCTION_CASHIER = 'TIP_FUNCTION_CASHIER';

    public const FINE_DINING = 'FINE_DINING';

    public const BAR_TAB = 'BAR_TAB';

    public const ADJUST_ALLOWED = 'ADJUST_ALLOWED';

    public const CHIP_AND_PIN = 'CHIP_AND_PIN';

    public const DCC_QUOTE = 'DCC_QUOTE';

    public const ENGINEER_VISIT = 'ENGINEER_VISIT';

    public const MANUAL_PAN_ENTRY = 'MANUAL_PAN_ENTRY';

    public const REFUND_PASS_REQ = 'REFUND_PASS_REQ';

    public const SUPPRESS_AUDRPT = 'SUPPRESS_AUDRPT';

    public const SUPRESS_REFTRANS = 'SUPRESS_REFTRANS';

    public const COURIER_INSTALL = 'COURIER_INSTALL';

    public const PREMIUM_INSTALL = 'PREMIUM_INSTALL';

    public const NO_MENU = 'NO_MENU';

    public const BASIC_MENU = 'BASIC_MENU';

    public const PREMIUM_MENU = 'PREMIUM_MENU';

    public const ENLARGE_TERMINAL_FONT = 'ENLARGE_TERMINAL_FONT';

    public const DATA_CANDY = 'DATA_CANDY';

    public const WIDEN_TERMINAL_COLUMNS = 'WIDEN_TERMINAL_COLUMNS';

    public const REMOVE_DETAIL_REPORT = 'REMOVE_DETAIL_REPORT';

    public const PROMPT_TIPS_GUIDELINE = 'PROMPT_TIPS_GUIDELINE';

    public const GATECONEX_2_ENABLED = 'GATECONEX_2_ENABLED';

    public const MASTERCARD_SECURE_CODE = 'MASTERCARD_SECURE_CODE';

    public const VERIFIED_BY_VISA = 'VERIFIED_BY_VISA';

    public const COURIER_DELIVERY = 'COURIER_DELIVERY';

    public const CASHLESS_PROGRAM = 'CASHLESS_PROGRAM';

    public const ENABLE_BLIK = 'ENABLE_BLIK';

    private const _ALL_VALUES = [
        self::QUICK_CLOSE,
        self::QUICK_STAY,
        self::STORE_AND_FORWARD,
        self::NO_SERVER_PROMPT,
        self::NO_SIGNATURE,
        self::NO_TIP,
        self::CONTACTLESS,
        self::TERMINAL_AUTO_CLOSE,
        self::CLERK_PROMPT,
        self::CUSTOM_FOOTER,
        self::CASH_BACK_PIN_DEBIT,
        self::TIP_FUNCTION_WAITER,
        self::TIP_FUNCTION_CASHIER,
        self::FINE_DINING,
        self::BAR_TAB,
        self::ADJUST_ALLOWED,
        self::CHIP_AND_PIN,
        self::DCC_QUOTE,
        self::ENGINEER_VISIT,
        self::MANUAL_PAN_ENTRY,
        self::REFUND_PASS_REQ,
        self::SUPPRESS_AUDRPT,
        self::SUPRESS_REFTRANS,
        self::COURIER_INSTALL,
        self::PREMIUM_INSTALL,
        self::NO_MENU,
        self::BASIC_MENU,
        self::PREMIUM_MENU,
        self::ENLARGE_TERMINAL_FONT,
        self::DATA_CANDY,
        self::WIDEN_TERMINAL_COLUMNS,
        self::REMOVE_DETAIL_REPORT,
        self::PROMPT_TIPS_GUIDELINE,
        self::GATECONEX_2_ENABLED,
        self::MASTERCARD_SECURE_CODE,
        self::VERIFIED_BY_VISA,
        self::COURIER_DELIVERY,
        self::CASHLESS_PROGRAM,
        self::ENABLE_BLIK,
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        ApiHelper::checkValueInEnum($value, self::class, self::_ALL_VALUES);
        return $value;
    }
}
