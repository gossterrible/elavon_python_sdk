<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class AsyncContext implements \JsonSerializable
{
    /**
     * @var ServletRequest|null
     */
    private $request;

    /**
     * @var int|null
     */
    private $timeout;

    /**
     * @var ServletResponse|null
     */
    private $response;

    /**
     * Returns Request.
     */
    public function getRequest(): ?ServletRequest
    {
        return $this->request;
    }

    /**
     * Sets Request.
     *
     * @maps request
     */
    public function setRequest(?ServletRequest $request): void
    {
        $this->request = $request;
    }

    /**
     * Returns Timeout.
     */
    public function getTimeout(): ?int
    {
        return $this->timeout;
    }

    /**
     * Sets Timeout.
     *
     * @maps timeout
     */
    public function setTimeout(?int $timeout): void
    {
        $this->timeout = $timeout;
    }

    /**
     * Returns Response.
     */
    public function getResponse(): ?ServletResponse
    {
        return $this->response;
    }

    /**
     * Sets Response.
     *
     * @maps response
     */
    public function setResponse(?ServletResponse $response): void
    {
        $this->response = $response;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->request)) {
            $json['request']  = $this->request;
        }
        if (isset($this->timeout)) {
            $json['timeout']  = $this->timeout;
        }
        if (isset($this->response)) {
            $json['response'] = $this->response;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
