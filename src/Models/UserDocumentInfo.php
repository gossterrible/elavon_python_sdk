<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class UserDocumentInfo implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $contentType;

    /**
     * @var string|null
     */
    private $signType;

    /**
     * @var string|null
     */
    private $contextType;

    /**
     * @var bool|null
     */
    private $agreementSnippet;

    /**
     * @var array<string,string>|null
     */
    private $partnerDocumentDescriptions;

    /**
     * Returns Content Type.
     */
    public function getContentType(): ?string
    {
        return $this->contentType;
    }

    /**
     * Sets Content Type.
     *
     * @maps contentType
     * @factory \SwaggerScarecrowLib\Models\ContentTypeEnum::checkValue
     */
    public function setContentType(?string $contentType): void
    {
        $this->contentType = $contentType;
    }

    /**
     * Returns Sign Type.
     */
    public function getSignType(): ?string
    {
        return $this->signType;
    }

    /**
     * Sets Sign Type.
     *
     * @maps signType
     * @factory \SwaggerScarecrowLib\Models\SignTypeEnum::checkValue
     */
    public function setSignType(?string $signType): void
    {
        $this->signType = $signType;
    }

    /**
     * Returns Context Type.
     */
    public function getContextType(): ?string
    {
        return $this->contextType;
    }

    /**
     * Sets Context Type.
     *
     * @maps contextType
     * @factory \SwaggerScarecrowLib\Models\ContextTypeEnum::checkValue
     */
    public function setContextType(?string $contextType): void
    {
        $this->contextType = $contextType;
    }

    /**
     * Returns Agreement Snippet.
     */
    public function getAgreementSnippet(): ?bool
    {
        return $this->agreementSnippet;
    }

    /**
     * Sets Agreement Snippet.
     *
     * @maps agreementSnippet
     */
    public function setAgreementSnippet(?bool $agreementSnippet): void
    {
        $this->agreementSnippet = $agreementSnippet;
    }

    /**
     * Returns Partner Document Descriptions.
     *
     * @return array<string,string>|null
     */
    public function getPartnerDocumentDescriptions(): ?array
    {
        return $this->partnerDocumentDescriptions;
    }

    /**
     * Sets Partner Document Descriptions.
     *
     * @maps partnerDocumentDescriptions
     *
     * @param array<string,string>|null $partnerDocumentDescriptions
     */
    public function setPartnerDocumentDescriptions(?array $partnerDocumentDescriptions): void
    {
        $this->partnerDocumentDescriptions = $partnerDocumentDescriptions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->contentType)) {
            $json['contentType']                 = ContentTypeEnum::checkValue($this->contentType);
        }
        if (isset($this->signType)) {
            $json['signType']                    = SignTypeEnum::checkValue($this->signType);
        }
        if (isset($this->contextType)) {
            $json['contextType']                 = ContextTypeEnum::checkValue($this->contextType);
        }
        if (isset($this->agreementSnippet)) {
            $json['agreementSnippet']            = $this->agreementSnippet;
        }
        if (isset($this->partnerDocumentDescriptions)) {
            $json['partnerDocumentDescriptions'] = $this->partnerDocumentDescriptions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
