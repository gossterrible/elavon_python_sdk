<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class GetDocumentsResponse implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $responseId;

    /**
     * @var string|null
     */
    private $error;

    /**
     * @var array|null
     */
    private $documents;

    /**
     * Returns Response Id.
     */
    public function getResponseId(): ?int
    {
        return $this->responseId;
    }

    /**
     * Sets Response Id.
     *
     * @maps responseId
     */
    public function setResponseId(?int $responseId): void
    {
        $this->responseId = $responseId;
    }

    /**
     * Returns Error.
     * If processing error occurs, will contain information, else will be empty or null
     */
    public function getError(): ?string
    {
        return $this->error;
    }

    /**
     * Sets Error.
     * If processing error occurs, will contain information, else will be empty or null
     *
     * @maps error
     */
    public function setError(?string $error): void
    {
        $this->error = $error;
    }

    /**
     * Returns Documents.
     * A map of documents where the key is a UserDocumentCode and the value the document
     */
    public function getDocuments(): ?array
    {
        return $this->documents;
    }

    /**
     * Sets Documents.
     * A map of documents where the key is a UserDocumentCode and the value the document
     *
     * @maps documents
     */
    public function setDocuments(?array $documents): void
    {
        $this->documents = $documents;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->responseId)) {
            $json['responseId'] = $this->responseId;
        }
        if (isset($this->error)) {
            $json['error']      = $this->error;
        }
        if (isset($this->documents)) {
            $json['documents']  = $this->documents;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
