<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class CardCharge implements \JsonSerializable
{
    /**
     * @var string
     */
    private $cardType;

    /**
     * @var float|null
     */
    private $minimumFee;

    /**
     * @var float|null
     */
    private $authorizationFee;

    /**
     * @var string|null
     */
    private $seNumber;

    /**
     * @var string|null
     */
    private $serviceType;

    /**
     * @var string|null
     */
    private $cardFunding;

    /**
     * @var array<string,PricingTier>|null
     */
    private $pricingTiers;

    /**
     * @param string $cardType
     */
    public function __construct(string $cardType)
    {
        $this->cardType = $cardType;
    }

    /**
     * Returns Card Type.
     * Type of card
     */
    public function getCardType(): string
    {
        return $this->cardType;
    }

    /**
     * Sets Card Type.
     * Type of card
     *
     * @required
     * @maps cardType
     * @factory \SwaggerScarecrowLib\Models\CardTypeEnum::checkValue
     */
    public function setCardType(string $cardType): void
    {
        $this->cardType = $cardType;
    }

    /**
     * Returns Minimum Fee.
     * [EU] Minimum charge fee to be applied to card
     */
    public function getMinimumFee(): ?float
    {
        return $this->minimumFee;
    }

    /**
     * Sets Minimum Fee.
     * [EU] Minimum charge fee to be applied to card
     *
     * @maps minimumFee
     */
    public function setMinimumFee(?float $minimumFee): void
    {
        $this->minimumFee = $minimumFee;
    }

    /**
     * Returns Authorization Fee.
     * [NA] Auth fee to be applied to card
     */
    public function getAuthorizationFee(): ?float
    {
        return $this->authorizationFee;
    }

    /**
     * Sets Authorization Fee.
     * [NA] Auth fee to be applied to card
     *
     * @maps authorizationFee
     */
    public function setAuthorizationFee(?float $authorizationFee): void
    {
        $this->authorizationFee = $authorizationFee;
    }

    /**
     * Returns Se Number.
     * [NA] Service Establishment number of card
     */
    public function getSeNumber(): ?string
    {
        return $this->seNumber;
    }

    /**
     * Sets Se Number.
     * [NA] Service Establishment number of card
     *
     * @maps seNumber
     */
    public function setSeNumber(?string $seNumber): void
    {
        $this->seNumber = $seNumber;
    }

    /**
     * Returns Service Type.
     * [EU] Service level of card
     */
    public function getServiceType(): ?string
    {
        return $this->serviceType;
    }

    /**
     * Sets Service Type.
     * [EU] Service level of card
     *
     * @maps serviceType
     * @factory \SwaggerScarecrowLib\Models\ServiceTypeEnum::checkValue
     */
    public function setServiceType(?string $serviceType): void
    {
        $this->serviceType = $serviceType;
    }

    /**
     * Returns Card Funding.
     * [NA] Who is providing the funding for the card
     */
    public function getCardFunding(): ?string
    {
        return $this->cardFunding;
    }

    /**
     * Sets Card Funding.
     * [NA] Who is providing the funding for the card
     *
     * @maps cardFunding
     * @factory \SwaggerScarecrowLib\Models\CardFundingEnum::checkValue
     */
    public function setCardFunding(?string $cardFunding): void
    {
        $this->cardFunding = $cardFunding;
    }

    /**
     * Returns Pricing Tiers.
     *
     * @return array<string,PricingTier>|null
     */
    public function getPricingTiers(): ?array
    {
        return $this->pricingTiers;
    }

    /**
     * Sets Pricing Tiers.
     *
     * @maps pricingTiers
     *
     * @param array<string,PricingTier>|null $pricingTiers
     */
    public function setPricingTiers(?array $pricingTiers): void
    {
        $this->pricingTiers = $pricingTiers;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['cardType']             = CardTypeEnum::checkValue($this->cardType);
        if (isset($this->minimumFee)) {
            $json['minimumFee']       = $this->minimumFee;
        }
        if (isset($this->authorizationFee)) {
            $json['authorizationFee'] = $this->authorizationFee;
        }
        if (isset($this->seNumber)) {
            $json['seNumber']         = $this->seNumber;
        }
        if (isset($this->serviceType)) {
            $json['serviceType']      = ServiceTypeEnum::checkValue($this->serviceType);
        }
        if (isset($this->cardFunding)) {
            $json['cardFunding']      = CardFundingEnum::checkValue($this->cardFunding);
        }
        if (isset($this->pricingTiers)) {
            $json['pricingTiers']     = $this->pricingTiers;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
