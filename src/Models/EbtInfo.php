<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class EbtInfo implements \JsonSerializable
{
    /**
     * @var string
     */
    private $seNumber;

    /**
     * @var float|null
     */
    private $authorizationFee;

    /**
     * @param string $seNumber
     */
    public function __construct(string $seNumber)
    {
        $this->seNumber = $seNumber;
    }

    /**
     * Returns Se Number.
     * EBT Service Establishment number
     */
    public function getSeNumber(): string
    {
        return $this->seNumber;
    }

    /**
     * Sets Se Number.
     * EBT Service Establishment number
     *
     * @required
     * @maps seNumber
     */
    public function setSeNumber(string $seNumber): void
    {
        $this->seNumber = $seNumber;
    }

    /**
     * Returns Authorization Fee.
     * EBT authorization fee to apply
     */
    public function getAuthorizationFee(): ?float
    {
        return $this->authorizationFee;
    }

    /**
     * Sets Authorization Fee.
     * EBT authorization fee to apply
     *
     * @maps authorizationFee
     */
    public function setAuthorizationFee(?float $authorizationFee): void
    {
        $this->authorizationFee = $authorizationFee;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['seNumber']             = $this->seNumber;
        if (isset($this->authorizationFee)) {
            $json['authorizationFee'] = $this->authorizationFee;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
