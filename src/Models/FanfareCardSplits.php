<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class FanfareCardSplits implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $promotional;

    /**
     * @var string|null
     */
    private $loyalty;

    /**
     * @var string|null
     */
    private $gift;

    /**
     * Returns Promotional.
     */
    public function getPromotional(): ?string
    {
        return $this->promotional;
    }

    /**
     * Sets Promotional.
     *
     * @maps promotional
     */
    public function setPromotional(?string $promotional): void
    {
        $this->promotional = $promotional;
    }

    /**
     * Returns Loyalty.
     */
    public function getLoyalty(): ?string
    {
        return $this->loyalty;
    }

    /**
     * Sets Loyalty.
     *
     * @maps loyalty
     */
    public function setLoyalty(?string $loyalty): void
    {
        $this->loyalty = $loyalty;
    }

    /**
     * Returns Gift.
     */
    public function getGift(): ?string
    {
        return $this->gift;
    }

    /**
     * Sets Gift.
     *
     * @maps gift
     */
    public function setGift(?string $gift): void
    {
        $this->gift = $gift;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->promotional)) {
            $json['promotional'] = $this->promotional;
        }
        if (isset($this->loyalty)) {
            $json['loyalty']     = $this->loyalty;
        }
        if (isset($this->gift)) {
            $json['gift']        = $this->gift;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
