<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use Exception;
use stdClass;
use SwaggerScarecrowLib\ApiHelper;

/**
 * [NA] Title type of person
 */
class TitleTypeEnum
{
    public const ACCOUNTING_MANAGER = 'ACCOUNTING_MANAGER';

    public const AUTHORIZED_SIGNER = 'AUTHORIZED_SIGNER';

    public const CONTROLLER = 'CONTROLLER';

    public const CHIEF_EXECUTIVE_OFFICER = 'CHIEF_EXECUTIVE_OFFICER';

    public const CHIEF_FINANCIAL_OFFICER = 'CHIEF_FINANCIAL_OFFICER';

    public const CHIEF_OPERATING_OFFICER = 'CHIEF_OPERATING_OFFICER';

    public const CHAIRMAN = 'CHAIRMAN';

    public const COSIGNER = 'COSIGNER';

    public const DIRECTOR = 'DIRECTOR';

    public const GENERAL_MANAGER = 'GENERAL_MANAGER';

    public const GENERAL_PARTNER = 'GENERAL_PARTNER';

    public const GUARANTOR = 'GUARANTOR';

    public const MANAGING_MEMBER = 'MANAGING_MEMBER';

    public const OFFICER = 'OFFICER';

    public const PROPRIETOR_OR_OWNER = 'PROPRIETOR_OR_OWNER';

    public const PRESIDENT = 'PRESIDENT';

    public const PARTNER_OR_PRINCIPAL = 'PARTNER_OR_PRINCIPAL';

    public const SECRETARY = 'SECRETARY';

    public const TREASURER = 'TREASURER';

    public const TRUSTEE = 'TRUSTEE';

    public const VICE_PRESIDENT = 'VICE_PRESIDENT';

    public const OTHER = 'OTHER';

    private const _ALL_VALUES = [
        self::ACCOUNTING_MANAGER,
        self::AUTHORIZED_SIGNER,
        self::CONTROLLER,
        self::CHIEF_EXECUTIVE_OFFICER,
        self::CHIEF_FINANCIAL_OFFICER,
        self::CHIEF_OPERATING_OFFICER,
        self::CHAIRMAN,
        self::COSIGNER,
        self::DIRECTOR,
        self::GENERAL_MANAGER,
        self::GENERAL_PARTNER,
        self::GUARANTOR,
        self::MANAGING_MEMBER,
        self::OFFICER,
        self::PROPRIETOR_OR_OWNER,
        self::PRESIDENT,
        self::PARTNER_OR_PRINCIPAL,
        self::SECRETARY,
        self::TREASURER,
        self::TRUSTEE,
        self::VICE_PRESIDENT,
        self::OTHER,
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        ApiHelper::checkValueInEnum($value, self::class, self::_ALL_VALUES);
        return $value;
    }
}
