<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class Identification implements \JsonSerializable
{
    /**
     * @var string
     */
    private $idType;

    /**
     * @var string
     */
    private $idNumber;

    /**
     * @var DateComponents|null
     */
    private $expiryDate;

    /**
     * @var DateComponents|null
     */
    private $issueDate;

    /**
     * @var string|null
     */
    private $issuingCountry;

    /**
     * @var string|null
     */
    private $issuingState;

    /**
     * @var string|null
     */
    private $idName;

    /**
     * @var string|null
     */
    private $issuingAgency;

    /**
     * @param string $idType
     * @param string $idNumber
     */
    public function __construct(string $idType, string $idNumber)
    {
        $this->idType = $idType;
        $this->idNumber = $idNumber;
    }

    /**
     * Returns Id Type.
     * Type of id provieded
     */
    public function getIdType(): string
    {
        return $this->idType;
    }

    /**
     * Sets Id Type.
     * Type of id provieded
     *
     * @required
     * @maps idType
     * @factory \SwaggerScarecrowLib\Models\IdTypeEnum::checkValue
     */
    public function setIdType(string $idType): void
    {
        $this->idType = $idType;
    }

    /**
     * Returns Id Number.
     * Id number
     */
    public function getIdNumber(): string
    {
        return $this->idNumber;
    }

    /**
     * Sets Id Number.
     * Id number
     *
     * @required
     * @maps idNumber
     */
    public function setIdNumber(string $idNumber): void
    {
        $this->idNumber = $idNumber;
    }

    /**
     * Returns Expiry Date.
     * A container that holds the date (day, month, and year)
     */
    public function getExpiryDate(): ?DateComponents
    {
        return $this->expiryDate;
    }

    /**
     * Sets Expiry Date.
     * A container that holds the date (day, month, and year)
     *
     * @maps expiryDate
     */
    public function setExpiryDate(?DateComponents $expiryDate): void
    {
        $this->expiryDate = $expiryDate;
    }

    /**
     * Returns Issue Date.
     * A container that holds the date (day, month, and year)
     */
    public function getIssueDate(): ?DateComponents
    {
        return $this->issueDate;
    }

    /**
     * Sets Issue Date.
     * A container that holds the date (day, month, and year)
     *
     * @maps issueDate
     */
    public function setIssueDate(?DateComponents $issueDate): void
    {
        $this->issueDate = $issueDate;
    }

    /**
     * Returns Issuing Country.
     * Id issuing country, ISO 3166-1 alpha-3 standard applies
     */
    public function getIssuingCountry(): ?string
    {
        return $this->issuingCountry;
    }

    /**
     * Sets Issuing Country.
     * Id issuing country, ISO 3166-1 alpha-3 standard applies
     *
     * @maps issuingCountry
     */
    public function setIssuingCountry(?string $issuingCountry): void
    {
        $this->issuingCountry = $issuingCountry;
    }

    /**
     * Returns Issuing State.
     * Id issuing state
     */
    public function getIssuingState(): ?string
    {
        return $this->issuingState;
    }

    /**
     * Sets Issuing State.
     * Id issuing state
     *
     * @maps issuingState
     * @factory \SwaggerScarecrowLib\Models\IssuingStateEnum::checkValue
     */
    public function setIssuingState(?string $issuingState): void
    {
        $this->issuingState = $issuingState;
    }

    /**
     * Returns Id Name.
     * Name of Id
     */
    public function getIdName(): ?string
    {
        return $this->idName;
    }

    /**
     * Sets Id Name.
     * Name of Id
     *
     * @maps idName
     */
    public function setIdName(?string $idName): void
    {
        $this->idName = $idName;
    }

    /**
     * Returns Issuing Agency.
     * Id issuing agency
     */
    public function getIssuingAgency(): ?string
    {
        return $this->issuingAgency;
    }

    /**
     * Sets Issuing Agency.
     * Id issuing agency
     *
     * @maps issuingAgency
     */
    public function setIssuingAgency(?string $issuingAgency): void
    {
        $this->issuingAgency = $issuingAgency;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['idType']             = IdTypeEnum::checkValue($this->idType);
        $json['idNumber']           = $this->idNumber;
        if (isset($this->expiryDate)) {
            $json['expiryDate']     = $this->expiryDate;
        }
        if (isset($this->issueDate)) {
            $json['issueDate']      = $this->issueDate;
        }
        if (isset($this->issuingCountry)) {
            $json['issuingCountry'] = $this->issuingCountry;
        }
        if (isset($this->issuingState)) {
            $json['issuingState']   = IssuingStateEnum::checkValue($this->issuingState);
        }
        if (isset($this->idName)) {
            $json['idName']         = $this->idName;
        }
        if (isset($this->issuingAgency)) {
            $json['issuingAgency']  = $this->issuingAgency;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
