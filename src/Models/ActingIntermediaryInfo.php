<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class ActingIntermediaryInfo implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $actingIntermediaryName;

    /**
     * @var string|null
     */
    private $actingIntermediaryType;

    /**
     * Returns Acting Intermediary Name.
     */
    public function getActingIntermediaryName(): ?string
    {
        return $this->actingIntermediaryName;
    }

    /**
     * Sets Acting Intermediary Name.
     *
     * @maps actingIntermediaryName
     */
    public function setActingIntermediaryName(?string $actingIntermediaryName): void
    {
        $this->actingIntermediaryName = $actingIntermediaryName;
    }

    /**
     * Returns Acting Intermediary Type.
     */
    public function getActingIntermediaryType(): ?string
    {
        return $this->actingIntermediaryType;
    }

    /**
     * Sets Acting Intermediary Type.
     *
     * @maps actingIntermediaryType
     * @factory \SwaggerScarecrowLib\Models\ActingIntermediaryTypeEnum::checkValue
     */
    public function setActingIntermediaryType(?string $actingIntermediaryType): void
    {
        $this->actingIntermediaryType = $actingIntermediaryType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->actingIntermediaryName)) {
            $json['actingIntermediaryName'] = $this->actingIntermediaryName;
        }
        if (isset($this->actingIntermediaryType)) {
            $json['actingIntermediaryType'] = ActingIntermediaryTypeEnum::checkValue($this->actingIntermediaryType);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
