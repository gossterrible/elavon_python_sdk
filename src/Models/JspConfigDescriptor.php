<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class JspConfigDescriptor implements \JsonSerializable
{
    /**
     * @var TaglibDescriptor[]|null
     */
    private $taglibs;

    /**
     * @var JspPropertyGroupDescriptor[]|null
     */
    private $jspPropertyGroups;

    /**
     * Returns Taglibs.
     *
     * @return TaglibDescriptor[]|null
     */
    public function getTaglibs(): ?array
    {
        return $this->taglibs;
    }

    /**
     * Sets Taglibs.
     *
     * @maps taglibs
     *
     * @param TaglibDescriptor[]|null $taglibs
     */
    public function setTaglibs(?array $taglibs): void
    {
        $this->taglibs = $taglibs;
    }

    /**
     * Returns Jsp Property Groups.
     *
     * @return JspPropertyGroupDescriptor[]|null
     */
    public function getJspPropertyGroups(): ?array
    {
        return $this->jspPropertyGroups;
    }

    /**
     * Sets Jsp Property Groups.
     *
     * @maps jspPropertyGroups
     *
     * @param JspPropertyGroupDescriptor[]|null $jspPropertyGroups
     */
    public function setJspPropertyGroups(?array $jspPropertyGroups): void
    {
        $this->jspPropertyGroups = $jspPropertyGroups;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->taglibs)) {
            $json['taglibs']           = $this->taglibs;
        }
        if (isset($this->jspPropertyGroups)) {
            $json['jspPropertyGroups'] = $this->jspPropertyGroups;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
