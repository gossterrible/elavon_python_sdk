<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use Exception;
use stdClass;
use SwaggerScarecrowLib\ApiHelper;

/**
 * [NA] Exemption type of owner (AML)
 */
class OwnerExemptionTypeEnum
{
    public const BANK_ADVISED_POOLED = 'BANK_ADVISED_POOLED';

    public const BANK_HOLDING_COMPANY_ACT = 'BANK_HOLDING_COMPANY_ACT';

    public const BANK_ADVISED_POOLED_RP = 'BANK_ADVISED_POOLED_RP';

    public const CFR = 'CFR';

    public const COMMODITY_EXCHANGE_ACT = 'COMMODITY_EXCHANGE_ACT';

    public const SECURITIES_EXCHANGE_ACT_CLEARING = 'SECURITIES_EXCHANGE_ACT_CLEARING';

    public const SECURITIES_EXCHANGE_ACT_REGISTERED = 'SECURITIES_EXCHANGE_ACT_REGISTERED';

    public const FINANCIAL_MARKET_UTILITY = 'FINANCIAL_MARKET_UTILITY';

    public const FOREIGN_BANK = 'FOREIGN_BANK';

    public const FOREIGN_GOVERNMENT = 'FOREIGN_GOVERNMENT';

    public const INVESTMENT_COMPANY_ACT_ADVISOR = 'INVESTMENT_COMPANY_ACT_ADVISOR';

    public const INVESTMENT_COMPANY_ACT_COMPANY = 'INVESTMENT_COMPANY_ACT_COMPANY';

    public const SECURITIES_EXCHANGE_ACT_ISSUER = 'SECURITIES_EXCHANGE_ACT_ISSUER';

    public const NON_PROFIT = 'NON_PROFIT';

    public const NONE = 'NONE';

    public const PUBLIC_ACCOUNTING_FIRM = 'PUBLIC_ACCOUNTING_FIRM';

    public const SUBSIDIARY_OF_PUBLIC_TRADE = 'SUBSIDIARY_OF_PUBLIC_TRADE';

    public const STATE_REGULATED_INSURANCE = 'STATE_REGULATED_INSURANCE';

    private const _ALL_VALUES = [
        self::BANK_ADVISED_POOLED,
        self::BANK_HOLDING_COMPANY_ACT,
        self::BANK_ADVISED_POOLED_RP,
        self::CFR,
        self::COMMODITY_EXCHANGE_ACT,
        self::SECURITIES_EXCHANGE_ACT_CLEARING,
        self::SECURITIES_EXCHANGE_ACT_REGISTERED,
        self::FINANCIAL_MARKET_UTILITY,
        self::FOREIGN_BANK,
        self::FOREIGN_GOVERNMENT,
        self::INVESTMENT_COMPANY_ACT_ADVISOR,
        self::INVESTMENT_COMPANY_ACT_COMPANY,
        self::SECURITIES_EXCHANGE_ACT_ISSUER,
        self::NON_PROFIT,
        self::NONE,
        self::PUBLIC_ACCOUNTING_FIRM,
        self::SUBSIDIARY_OF_PUBLIC_TRADE,
        self::STATE_REGULATED_INSURANCE,
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        ApiHelper::checkValueInEnum($value, self::class, self::_ALL_VALUES);
        return $value;
    }
}
