<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;
use SwaggerScarecrowLib\Utils\DateTimeHelper;

class PrincipalOwnerDetail implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $responsibleParty;

    /**
     * @var string|null
     */
    private $citizenshipCountryCode;

    /**
     * @var PersonIdentification[]|null
     */
    private $identifications;

    /**
     * @var \DateTime|null
     */
    private $dateOfBirth;

    /**
     * @var string|null
     */
    private $mid;

    /**
     * @var string|null
     */
    private $percentSharesHeld;

    /**
     * @var string|null
     */
    private $shareHolderType;

    /**
     * @var bool|null
     */
    private $accountOpener;

    /**
     * @var bool|null
     */
    private $personalGuarantee;

    /**
     * @var bool|null
     */
    private $altAddVerifyDocRequired;

    /**
     * @var string|null
     */
    private $altAddVerifyDocType;

    /**
     * @var string|null
     */
    private $altAddVerifyDocTxt;

    /**
     * @var bool|null
     */
    private $altAddVerifyDocVerified;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @var string|null
     */
    private $verificationMethod;

    /**
     * @var \DateTime|null
     */
    private $verificationDate;

    /**
     * Returns Responsible Party.
     */
    public function getResponsibleParty(): ?bool
    {
        return $this->responsibleParty;
    }

    /**
     * Sets Responsible Party.
     *
     * @maps responsibleParty
     */
    public function setResponsibleParty(?bool $responsibleParty): void
    {
        $this->responsibleParty = $responsibleParty;
    }

    /**
     * Returns Citizenship Country Code.
     */
    public function getCitizenshipCountryCode(): ?string
    {
        return $this->citizenshipCountryCode;
    }

    /**
     * Sets Citizenship Country Code.
     *
     * @maps citizenshipCountryCode
     */
    public function setCitizenshipCountryCode(?string $citizenshipCountryCode): void
    {
        $this->citizenshipCountryCode = $citizenshipCountryCode;
    }

    /**
     * Returns Identifications.
     *
     * @return PersonIdentification[]|null
     */
    public function getIdentifications(): ?array
    {
        return $this->identifications;
    }

    /**
     * Sets Identifications.
     *
     * @maps identifications
     *
     * @param PersonIdentification[]|null $identifications
     */
    public function setIdentifications(?array $identifications): void
    {
        $this->identifications = $identifications;
    }

    /**
     * Returns Date of Birth.
     */
    public function getDateOfBirth(): ?\DateTime
    {
        return $this->dateOfBirth;
    }

    /**
     * Sets Date of Birth.
     *
     * @maps dateOfBirth
     * @factory \SwaggerScarecrowLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDateOfBirth(?\DateTime $dateOfBirth): void
    {
        $this->dateOfBirth = $dateOfBirth;
    }

    /**
     * Returns Mid.
     */
    public function getMid(): ?string
    {
        return $this->mid;
    }

    /**
     * Sets Mid.
     *
     * @maps mid
     */
    public function setMid(?string $mid): void
    {
        $this->mid = $mid;
    }

    /**
     * Returns Percent Shares Held.
     */
    public function getPercentSharesHeld(): ?string
    {
        return $this->percentSharesHeld;
    }

    /**
     * Sets Percent Shares Held.
     *
     * @maps percentSharesHeld
     */
    public function setPercentSharesHeld(?string $percentSharesHeld): void
    {
        $this->percentSharesHeld = $percentSharesHeld;
    }

    /**
     * Returns Share Holder Type.
     */
    public function getShareHolderType(): ?string
    {
        return $this->shareHolderType;
    }

    /**
     * Sets Share Holder Type.
     *
     * @maps shareHolderType
     */
    public function setShareHolderType(?string $shareHolderType): void
    {
        $this->shareHolderType = $shareHolderType;
    }

    /**
     * Returns Account Opener.
     */
    public function getAccountOpener(): ?bool
    {
        return $this->accountOpener;
    }

    /**
     * Sets Account Opener.
     *
     * @maps accountOpener
     */
    public function setAccountOpener(?bool $accountOpener): void
    {
        $this->accountOpener = $accountOpener;
    }

    /**
     * Returns Personal Guarantee.
     */
    public function getPersonalGuarantee(): ?bool
    {
        return $this->personalGuarantee;
    }

    /**
     * Sets Personal Guarantee.
     *
     * @maps personalGuarantee
     */
    public function setPersonalGuarantee(?bool $personalGuarantee): void
    {
        $this->personalGuarantee = $personalGuarantee;
    }

    /**
     * Returns Alt Add Verify Doc Required.
     */
    public function getAltAddVerifyDocRequired(): ?bool
    {
        return $this->altAddVerifyDocRequired;
    }

    /**
     * Sets Alt Add Verify Doc Required.
     *
     * @maps altAddVerifyDocRequired
     */
    public function setAltAddVerifyDocRequired(?bool $altAddVerifyDocRequired): void
    {
        $this->altAddVerifyDocRequired = $altAddVerifyDocRequired;
    }

    /**
     * Returns Alt Add Verify Doc Type.
     */
    public function getAltAddVerifyDocType(): ?string
    {
        return $this->altAddVerifyDocType;
    }

    /**
     * Sets Alt Add Verify Doc Type.
     *
     * @maps altAddVerifyDocType
     */
    public function setAltAddVerifyDocType(?string $altAddVerifyDocType): void
    {
        $this->altAddVerifyDocType = $altAddVerifyDocType;
    }

    /**
     * Returns Alt Add Verify Doc Txt.
     */
    public function getAltAddVerifyDocTxt(): ?string
    {
        return $this->altAddVerifyDocTxt;
    }

    /**
     * Sets Alt Add Verify Doc Txt.
     *
     * @maps altAddVerifyDocTxt
     */
    public function setAltAddVerifyDocTxt(?string $altAddVerifyDocTxt): void
    {
        $this->altAddVerifyDocTxt = $altAddVerifyDocTxt;
    }

    /**
     * Returns Alt Add Verify Doc Verified.
     */
    public function getAltAddVerifyDocVerified(): ?bool
    {
        return $this->altAddVerifyDocVerified;
    }

    /**
     * Sets Alt Add Verify Doc Verified.
     *
     * @maps altAddVerifyDocVerified
     */
    public function setAltAddVerifyDocVerified(?bool $altAddVerifyDocVerified): void
    {
        $this->altAddVerifyDocVerified = $altAddVerifyDocVerified;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Verification Method.
     */
    public function getVerificationMethod(): ?string
    {
        return $this->verificationMethod;
    }

    /**
     * Sets Verification Method.
     *
     * @maps verificationMethod
     */
    public function setVerificationMethod(?string $verificationMethod): void
    {
        $this->verificationMethod = $verificationMethod;
    }

    /**
     * Returns Verification Date.
     */
    public function getVerificationDate(): ?\DateTime
    {
        return $this->verificationDate;
    }

    /**
     * Sets Verification Date.
     *
     * @maps verificationDate
     * @factory \SwaggerScarecrowLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setVerificationDate(?\DateTime $verificationDate): void
    {
        $this->verificationDate = $verificationDate;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->responsibleParty)) {
            $json['responsibleParty']        = $this->responsibleParty;
        }
        if (isset($this->citizenshipCountryCode)) {
            $json['citizenshipCountryCode']  = $this->citizenshipCountryCode;
        }
        if (isset($this->identifications)) {
            $json['identifications']         = $this->identifications;
        }
        if (isset($this->dateOfBirth)) {
            $json['dateOfBirth']             = DateTimeHelper::toRfc3339DateTime($this->dateOfBirth);
        }
        if (isset($this->mid)) {
            $json['mid']                     = $this->mid;
        }
        if (isset($this->percentSharesHeld)) {
            $json['percentSharesHeld']       = $this->percentSharesHeld;
        }
        if (isset($this->shareHolderType)) {
            $json['shareHolderType']         = $this->shareHolderType;
        }
        if (isset($this->accountOpener)) {
            $json['accountOpener']           = $this->accountOpener;
        }
        if (isset($this->personalGuarantee)) {
            $json['personalGuarantee']       = $this->personalGuarantee;
        }
        if (isset($this->altAddVerifyDocRequired)) {
            $json['altAddVerifyDocRequired'] = $this->altAddVerifyDocRequired;
        }
        if (isset($this->altAddVerifyDocType)) {
            $json['altAddVerifyDocType']     = $this->altAddVerifyDocType;
        }
        if (isset($this->altAddVerifyDocTxt)) {
            $json['altAddVerifyDocTxt']      = $this->altAddVerifyDocTxt;
        }
        if (isset($this->altAddVerifyDocVerified)) {
            $json['altAddVerifyDocVerified'] = $this->altAddVerifyDocVerified;
        }
        if (isset($this->email)) {
            $json['email']                   = $this->email;
        }
        if (isset($this->verificationMethod)) {
            $json['verificationMethod']      = $this->verificationMethod;
        }
        if (isset($this->verificationDate)) {
            $json['verificationDate']        = DateTimeHelper::toRfc3339DateTime($this->verificationDate);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
