<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use Exception;
use stdClass;
use SwaggerScarecrowLib\ApiHelper;

/**
 * Type of id provieded
 */
class IdTypeEnum
{
    public const PASSPORT = 'PASSPORT';

    public const ID_CARD = 'ID_CARD';

    public const DRIVER_LICENSE = 'DRIVER_LICENSE';

    public const SIN = 'SIN';

    public const ITIN = 'ITIN';

    public const FOREIGN_PASSPORT = 'FOREIGN_PASSPORT';

    public const RESIDENT_ALIEN_CARD = 'RESIDENT_ALIEN_CARD';

    public const GOVERNMENT_ISSUED_ID = 'GOVERNMENT_ISSUED_ID';

    public const PESEL = 'PESEL';

    public const ALIEN_PASSPORT = 'ALIEN_PASSPORT';

    public const BANK_CARD = 'BANK_CARD';

    public const ELECTRONIC_FOREIGNER_CARD = 'ELECTRONIC_FOREIGNER_CARD';

    public const EU_RESIDENCE_CARD_FIVE_YEAR = 'EU_RESIDENCE_CARD_FIVE_YEAR';

    public const KARTA_POBYTU = 'KARTA_POBYTU';

    public const FIREARMS_CERTIFICATE = 'FIREARMS_CERTIFICATE';

    public const NORTH_IRELAND_ELECTORAL_CARD = 'NORTH_IRELAND_ELECTORAL_CARD';

    public const PASSPORT_CARD = 'PASSPORT_CARD';

    public const SPANISH_RESIDENT_CARD = 'SPANISH_RESIDENT_CARD';

    public const OTHER_GOVERNMENT_PHOTO_ID = 'OTHER_GOVERNMENT_PHOTO_ID';

    public const OTHER_EFCC_APPROVED_DOCUMENT = 'OTHER_EFCC_APPROVED_DOCUMENT';

    public const CANADIAN_PASSPORT = 'CANADIAN_PASSPORT';

    private const _ALL_VALUES = [
        self::PASSPORT,
        self::ID_CARD,
        self::DRIVER_LICENSE,
        self::SIN,
        self::ITIN,
        self::FOREIGN_PASSPORT,
        self::RESIDENT_ALIEN_CARD,
        self::GOVERNMENT_ISSUED_ID,
        self::PESEL,
        self::ALIEN_PASSPORT,
        self::BANK_CARD,
        self::ELECTRONIC_FOREIGNER_CARD,
        self::EU_RESIDENCE_CARD_FIVE_YEAR,
        self::KARTA_POBYTU,
        self::FIREARMS_CERTIFICATE,
        self::NORTH_IRELAND_ELECTORAL_CARD,
        self::PASSPORT_CARD,
        self::SPANISH_RESIDENT_CARD,
        self::OTHER_GOVERNMENT_PHOTO_ID,
        self::OTHER_EFCC_APPROVED_DOCUMENT,
        self::CANADIAN_PASSPORT,
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        ApiHelper::checkValueInEnum($value, self::class, self::_ALL_VALUES);
        return $value;
    }
}
