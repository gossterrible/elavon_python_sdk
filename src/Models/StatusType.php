<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class StatusType implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $family;

    /**
     * @var int|null
     */
    private $statusCode;

    /**
     * @var string|null
     */
    private $reasonPhrase;

    /**
     * Returns Family.
     */
    public function getFamily(): ?string
    {
        return $this->family;
    }

    /**
     * Sets Family.
     *
     * @maps family
     * @factory \SwaggerScarecrowLib\Models\FamilyEnum::checkValue
     */
    public function setFamily(?string $family): void
    {
        $this->family = $family;
    }

    /**
     * Returns Status Code.
     */
    public function getStatusCode(): ?int
    {
        return $this->statusCode;
    }

    /**
     * Sets Status Code.
     *
     * @maps statusCode
     */
    public function setStatusCode(?int $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * Returns Reason Phrase.
     */
    public function getReasonPhrase(): ?string
    {
        return $this->reasonPhrase;
    }

    /**
     * Sets Reason Phrase.
     *
     * @maps reasonPhrase
     */
    public function setReasonPhrase(?string $reasonPhrase): void
    {
        $this->reasonPhrase = $reasonPhrase;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->family)) {
            $json['family']       = FamilyEnum::checkValue($this->family);
        }
        if (isset($this->statusCode)) {
            $json['statusCode']   = $this->statusCode;
        }
        if (isset($this->reasonPhrase)) {
            $json['reasonPhrase'] = $this->reasonPhrase;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
