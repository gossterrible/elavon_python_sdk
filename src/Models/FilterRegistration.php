<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class FilterRegistration implements \JsonSerializable
{
    /**
     * @var string[]|null
     */
    private $servletNameMappings;

    /**
     * @var string[]|null
     */
    private $urlPatternMappings;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $className;

    /**
     * @var array<string,string>|null
     */
    private $initParameters;

    /**
     * Returns Servlet Name Mappings.
     *
     * @return string[]|null
     */
    public function getServletNameMappings(): ?array
    {
        return $this->servletNameMappings;
    }

    /**
     * Sets Servlet Name Mappings.
     *
     * @maps servletNameMappings
     *
     * @param string[]|null $servletNameMappings
     */
    public function setServletNameMappings(?array $servletNameMappings): void
    {
        $this->servletNameMappings = $servletNameMappings;
    }

    /**
     * Returns Url Pattern Mappings.
     *
     * @return string[]|null
     */
    public function getUrlPatternMappings(): ?array
    {
        return $this->urlPatternMappings;
    }

    /**
     * Sets Url Pattern Mappings.
     *
     * @maps urlPatternMappings
     *
     * @param string[]|null $urlPatternMappings
     */
    public function setUrlPatternMappings(?array $urlPatternMappings): void
    {
        $this->urlPatternMappings = $urlPatternMappings;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Class Name.
     */
    public function getClassName(): ?string
    {
        return $this->className;
    }

    /**
     * Sets Class Name.
     *
     * @maps className
     */
    public function setClassName(?string $className): void
    {
        $this->className = $className;
    }

    /**
     * Returns Init Parameters.
     *
     * @return array<string,string>|null
     */
    public function getInitParameters(): ?array
    {
        return $this->initParameters;
    }

    /**
     * Sets Init Parameters.
     *
     * @maps initParameters
     *
     * @param array<string,string>|null $initParameters
     */
    public function setInitParameters(?array $initParameters): void
    {
        $this->initParameters = $initParameters;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->servletNameMappings)) {
            $json['servletNameMappings'] = $this->servletNameMappings;
        }
        if (isset($this->urlPatternMappings)) {
            $json['urlPatternMappings']  = $this->urlPatternMappings;
        }
        if (isset($this->name)) {
            $json['name']                = $this->name;
        }
        if (isset($this->className)) {
            $json['className']           = $this->className;
        }
        if (isset($this->initParameters)) {
            $json['initParameters']      = $this->initParameters;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
