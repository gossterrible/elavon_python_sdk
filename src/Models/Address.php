<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class Address implements \JsonSerializable
{
    /**
     * @var string
     */
    private $streetName;

    /**
     * @var string|null
     */
    private $streetNumber;

    /**
     * @var string|null
     */
    private $lineTwo;

    /**
     * @var string|null
     */
    private $lineThree;

    /**
     * @var string
     */
    private $city;

    /**
     * @var string|null
     */
    private $county;

    /**
     * @var string|null
     */
    private $postCode;

    /**
     * @var string
     */
    private $country;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $classification;

    /**
     * @var Name|null
     */
    private $contactName;

    /**
     * @var string|null
     */
    private $locationName;

    /**
     * @param string $streetName
     * @param string $city
     * @param string $country
     */
    public function __construct(string $streetName, string $city, string $country)
    {
        $this->streetName = $streetName;
        $this->city = $city;
        $this->country = $country;
    }

    /**
     * Returns Street Name.
     * Line one of address, name
     */
    public function getStreetName(): string
    {
        return $this->streetName;
    }

    /**
     * Sets Street Name.
     * Line one of address, name
     *
     * @required
     * @maps streetName
     */
    public function setStreetName(string $streetName): void
    {
        $this->streetName = $streetName;
    }

    /**
     * Returns Street Number.
     * Line one of address, number
     */
    public function getStreetNumber(): ?string
    {
        return $this->streetNumber;
    }

    /**
     * Sets Street Number.
     * Line one of address, number
     *
     * @maps streetNumber
     */
    public function setStreetNumber(?string $streetNumber): void
    {
        $this->streetNumber = $streetNumber;
    }

    /**
     * Returns Line Two.
     * Line two of address
     */
    public function getLineTwo(): ?string
    {
        return $this->lineTwo;
    }

    /**
     * Sets Line Two.
     * Line two of address
     *
     * @maps lineTwo
     */
    public function setLineTwo(?string $lineTwo): void
    {
        $this->lineTwo = $lineTwo;
    }

    /**
     * Returns Line Three.
     * Line three of address
     */
    public function getLineThree(): ?string
    {
        return $this->lineThree;
    }

    /**
     * Sets Line Three.
     * Line three of address
     *
     * @maps lineThree
     */
    public function setLineThree(?string $lineThree): void
    {
        $this->lineThree = $lineThree;
    }

    /**
     * Returns City.
     * City of address
     */
    public function getCity(): string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City of address
     *
     * @required
     * @maps city
     */
    public function setCity(string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns County.
     * County of address
     */
    public function getCounty(): ?string
    {
        return $this->county;
    }

    /**
     * Sets County.
     * County of address
     *
     * @maps county
     */
    public function setCounty(?string $county): void
    {
        $this->county = $county;
    }

    /**
     * Returns Post Code.
     * Postal/Zip code of address
     */
    public function getPostCode(): ?string
    {
        return $this->postCode;
    }

    /**
     * Sets Post Code.
     * Postal/Zip code of address
     *
     * @maps postCode
     */
    public function setPostCode(?string $postCode): void
    {
        $this->postCode = $postCode;
    }

    /**
     * Returns Country.
     * Country of address, ISO 3166-1 alpha-3 standard applies
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Country of address, ISO 3166-1 alpha-3 standard applies
     *
     * @required
     * @maps country
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns State.
     * State/Province of address
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * State/Province of address
     *
     * @maps state
     * @factory \SwaggerScarecrowLib\Models\StateEnum::checkValue
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Classification.
     * [NA] Type of address
     */
    public function getClassification(): ?string
    {
        return $this->classification;
    }

    /**
     * Sets Classification.
     * [NA] Type of address
     *
     * @maps classification
     * @factory \SwaggerScarecrowLib\Models\ClassificationEnum::checkValue
     */
    public function setClassification(?string $classification): void
    {
        $this->classification = $classification;
    }

    /**
     * Returns Contact Name.
     */
    public function getContactName(): ?Name
    {
        return $this->contactName;
    }

    /**
     * Sets Contact Name.
     *
     * @maps contactName
     */
    public function setContactName(?Name $contactName): void
    {
        $this->contactName = $contactName;
    }

    /**
     * Returns Location Name.
     * [NA] Name of address local name
     */
    public function getLocationName(): ?string
    {
        return $this->locationName;
    }

    /**
     * Sets Location Name.
     * [NA] Name of address local name
     *
     * @maps locationName
     */
    public function setLocationName(?string $locationName): void
    {
        $this->locationName = $locationName;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['streetName']         = $this->streetName;
        if (isset($this->streetNumber)) {
            $json['streetNumber']   = $this->streetNumber;
        }
        if (isset($this->lineTwo)) {
            $json['lineTwo']        = $this->lineTwo;
        }
        if (isset($this->lineThree)) {
            $json['lineThree']      = $this->lineThree;
        }
        $json['city']               = $this->city;
        if (isset($this->county)) {
            $json['county']         = $this->county;
        }
        if (isset($this->postCode)) {
            $json['postCode']       = $this->postCode;
        }
        $json['country']            = $this->country;
        if (isset($this->state)) {
            $json['state']          = StateEnum::checkValue($this->state);
        }
        if (isset($this->classification)) {
            $json['classification'] = ClassificationEnum::checkValue($this->classification);
        }
        if (isset($this->contactName)) {
            $json['contactName']    = $this->contactName;
        }
        if (isset($this->locationName)) {
            $json['locationName']   = $this->locationName;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
