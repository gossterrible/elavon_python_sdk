<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class DistributionInfo implements \JsonSerializable
{
    /**
     * @var string
     */
    private $method;

    /**
     * @var string|null
     */
    private $addressType;

    /**
     * @var string|null
     */
    private $emailAddress;

    /**
     * @param string $method
     */
    public function __construct(string $method)
    {
        $this->method = $method;
    }

    /**
     * Returns Method.
     * Method of distribution
     */
    public function getMethod(): string
    {
        return $this->method;
    }

    /**
     * Sets Method.
     * Method of distribution
     *
     * @required
     * @maps method
     * @factory \SwaggerScarecrowLib\Models\MethodEnum::checkValue
     */
    public function setMethod(string $method): void
    {
        $this->method = $method;
    }

    /**
     * Returns Address Type.
     * Physical address, applicable if distribution method is non-electronic
     */
    public function getAddressType(): ?string
    {
        return $this->addressType;
    }

    /**
     * Sets Address Type.
     * Physical address, applicable if distribution method is non-electronic
     *
     * @maps addressType
     * @factory \SwaggerScarecrowLib\Models\AddressType2Enum::checkValue
     */
    public function setAddressType(?string $addressType): void
    {
        $this->addressType = $addressType;
    }

    /**
     * Returns Email Address.
     * Email address, applicable if distribution method is electronic
     */
    public function getEmailAddress(): ?string
    {
        return $this->emailAddress;
    }

    /**
     * Sets Email Address.
     * Email address, applicable if distribution method is electronic
     *
     * @maps emailAddress
     */
    public function setEmailAddress(?string $emailAddress): void
    {
        $this->emailAddress = $emailAddress;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['method']           = MethodEnum::checkValue($this->method);
        if (isset($this->addressType)) {
            $json['addressType']  = AddressType2Enum::checkValue($this->addressType);
        }
        if (isset($this->emailAddress)) {
            $json['emailAddress'] = $this->emailAddress;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
