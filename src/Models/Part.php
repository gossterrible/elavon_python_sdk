<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class Part implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var int|null
     */
    private $size;

    /**
     * @var array|null
     */
    private $inputStream;

    /**
     * @var string[]|null
     */
    private $headerNames;

    /**
     * @var string|null
     */
    private $submittedFileName;

    /**
     * @var string|null
     */
    private $contentType;

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Size.
     */
    public function getSize(): ?int
    {
        return $this->size;
    }

    /**
     * Sets Size.
     *
     * @maps size
     */
    public function setSize(?int $size): void
    {
        $this->size = $size;
    }

    /**
     * Returns Input Stream.
     */
    public function getInputStream(): ?array
    {
        return $this->inputStream;
    }

    /**
     * Sets Input Stream.
     *
     * @maps inputStream
     */
    public function setInputStream(?array $inputStream): void
    {
        $this->inputStream = $inputStream;
    }

    /**
     * Returns Header Names.
     *
     * @return string[]|null
     */
    public function getHeaderNames(): ?array
    {
        return $this->headerNames;
    }

    /**
     * Sets Header Names.
     *
     * @maps headerNames
     *
     * @param string[]|null $headerNames
     */
    public function setHeaderNames(?array $headerNames): void
    {
        $this->headerNames = $headerNames;
    }

    /**
     * Returns Submitted File Name.
     */
    public function getSubmittedFileName(): ?string
    {
        return $this->submittedFileName;
    }

    /**
     * Sets Submitted File Name.
     *
     * @maps submittedFileName
     */
    public function setSubmittedFileName(?string $submittedFileName): void
    {
        $this->submittedFileName = $submittedFileName;
    }

    /**
     * Returns Content Type.
     */
    public function getContentType(): ?string
    {
        return $this->contentType;
    }

    /**
     * Sets Content Type.
     *
     * @maps contentType
     */
    public function setContentType(?string $contentType): void
    {
        $this->contentType = $contentType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->name)) {
            $json['name']              = $this->name;
        }
        if (isset($this->size)) {
            $json['size']              = $this->size;
        }
        if (isset($this->inputStream)) {
            $json['inputStream']       = $this->inputStream;
        }
        if (isset($this->headerNames)) {
            $json['headerNames']       = $this->headerNames;
        }
        if (isset($this->submittedFileName)) {
            $json['submittedFileName'] = $this->submittedFileName;
        }
        if (isset($this->contentType)) {
            $json['contentType']       = $this->contentType;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
