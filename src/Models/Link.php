<?php

declare(strict_types=1);

/*
 * SwaggerScarecrowLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerScarecrowLib\Models;

use stdClass;

class Link implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $title;

    /**
     * @var array<string,string>|null
     */
    private $params;

    /**
     * @var array|null
     */
    private $uriBuilder;

    /**
     * @var string|null
     */
    private $rel;

    /**
     * @var string[]|null
     */
    private $rels;

    /**
     * @var string|null
     */
    private $uri;

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Params.
     *
     * @return array<string,string>|null
     */
    public function getParams(): ?array
    {
        return $this->params;
    }

    /**
     * Sets Params.
     *
     * @maps params
     *
     * @param array<string,string>|null $params
     */
    public function setParams(?array $params): void
    {
        $this->params = $params;
    }

    /**
     * Returns Uri Builder.
     */
    public function getUriBuilder(): ?array
    {
        return $this->uriBuilder;
    }

    /**
     * Sets Uri Builder.
     *
     * @maps uriBuilder
     */
    public function setUriBuilder(?array $uriBuilder): void
    {
        $this->uriBuilder = $uriBuilder;
    }

    /**
     * Returns Rel.
     */
    public function getRel(): ?string
    {
        return $this->rel;
    }

    /**
     * Sets Rel.
     *
     * @maps rel
     */
    public function setRel(?string $rel): void
    {
        $this->rel = $rel;
    }

    /**
     * Returns Rels.
     *
     * @return string[]|null
     */
    public function getRels(): ?array
    {
        return $this->rels;
    }

    /**
     * Sets Rels.
     *
     * @maps rels
     *
     * @param string[]|null $rels
     */
    public function setRels(?array $rels): void
    {
        $this->rels = $rels;
    }

    /**
     * Returns Uri.
     */
    public function getUri(): ?string
    {
        return $this->uri;
    }

    /**
     * Sets Uri.
     *
     * @maps uri
     */
    public function setUri(?string $uri): void
    {
        $this->uri = $uri;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->type)) {
            $json['type']       = $this->type;
        }
        if (isset($this->title)) {
            $json['title']      = $this->title;
        }
        if (isset($this->params)) {
            $json['params']     = $this->params;
        }
        if (isset($this->uriBuilder)) {
            $json['uriBuilder'] = $this->uriBuilder;
        }
        if (isset($this->rel)) {
            $json['rel']        = $this->rel;
        }
        if (isset($this->rels)) {
            $json['rels']       = $this->rels;
        }
        if (isset($this->uri)) {
            $json['uri']        = $this->uri;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
