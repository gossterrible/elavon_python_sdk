# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper
from swaggerscarecrow.models.address_fields import AddressFields


class CompanyLightweight(object):

    """Implementation of the 'CompanyLightweight' model.

    TODO: type model description here.

    Attributes:
        company_id (string): TODO: type description here.
        name (string): TODO: type description here.
        status (string): TODO: type description here.
        mtype (string): TODO: type description here.
        address (AddressFields): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "company_id": 'companyId',
        "name": 'name',
        "status": 'status',
        "mtype": 'type',
        "address": 'address'
    }

    _optionals = [
        'company_id',
        'name',
        'status',
        'mtype',
        'address',
    ]

    def __init__(self,
                 company_id=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 address=APIHelper.SKIP):
        """Constructor for the CompanyLightweight class"""

        # Initialize members of the class
        if company_id is not APIHelper.SKIP:
            self.company_id = company_id 
        if name is not APIHelper.SKIP:
            self.name = name 
        if status is not APIHelper.SKIP:
            self.status = status 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if address is not APIHelper.SKIP:
            self.address = address 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        company_id = dictionary.get("companyId") if dictionary.get("companyId") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        address = AddressFields.from_dictionary(dictionary.get('address')) if 'address' in dictionary.keys() else APIHelper.SKIP 
        # Return an object of this model
        return cls(company_id,
                   name,
                   status,
                   mtype,
                   address)
