# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class LoyaltyInfo(object):

    """Implementation of the 'LoyaltyInfo' model.

    TODO: type model description here.

    Attributes:
        visits (int): TODO: type description here.
        amount_spent (float): TODO: type description here.
        discount_rate (float): TODO: type description here.
        discount_amount (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "visits": 'visits',
        "amount_spent": 'amountSpent',
        "discount_rate": 'discountRate',
        "discount_amount": 'discountAmount'
    }

    _optionals = [
        'visits',
        'amount_spent',
        'discount_rate',
        'discount_amount',
    ]

    def __init__(self,
                 visits=APIHelper.SKIP,
                 amount_spent=APIHelper.SKIP,
                 discount_rate=APIHelper.SKIP,
                 discount_amount=APIHelper.SKIP):
        """Constructor for the LoyaltyInfo class"""

        # Initialize members of the class
        if visits is not APIHelper.SKIP:
            self.visits = visits 
        if amount_spent is not APIHelper.SKIP:
            self.amount_spent = amount_spent 
        if discount_rate is not APIHelper.SKIP:
            self.discount_rate = discount_rate 
        if discount_amount is not APIHelper.SKIP:
            self.discount_amount = discount_amount 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        visits = dictionary.get("visits") if dictionary.get("visits") else APIHelper.SKIP
        amount_spent = dictionary.get("amountSpent") if dictionary.get("amountSpent") else APIHelper.SKIP
        discount_rate = dictionary.get("discountRate") if dictionary.get("discountRate") else APIHelper.SKIP
        discount_amount = dictionary.get("discountAmount") if dictionary.get("discountAmount") else APIHelper.SKIP
        # Return an object of this model
        return cls(visits,
                   amount_spent,
                   discount_rate,
                   discount_amount)
