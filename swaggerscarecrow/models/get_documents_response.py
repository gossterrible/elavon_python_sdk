# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class GetDocumentsResponse(object):

    """Implementation of the 'GetDocumentsResponse' model.

    TODO: type model description here.

    Attributes:
        response_id (int): TODO: type description here.
        error (string): If processing error occurs, will contain information,
            else will be empty or null
        documents (dict): A map of documents where the key is a
            UserDocumentCode and the value the document

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "response_id": 'responseId',
        "error": 'error',
        "documents": 'documents'
    }

    _optionals = [
        'response_id',
        'error',
        'documents',
    ]

    def __init__(self,
                 response_id=APIHelper.SKIP,
                 error=APIHelper.SKIP,
                 documents=APIHelper.SKIP):
        """Constructor for the GetDocumentsResponse class"""

        # Initialize members of the class
        if response_id is not APIHelper.SKIP:
            self.response_id = response_id 
        if error is not APIHelper.SKIP:
            self.error = error 
        if documents is not APIHelper.SKIP:
            self.documents = documents 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        response_id = dictionary.get("responseId") if dictionary.get("responseId") else APIHelper.SKIP
        error = dictionary.get("error") if dictionary.get("error") else APIHelper.SKIP
        documents = dictionary.get("documents") if dictionary.get("documents") else APIHelper.SKIP
        # Return an object of this model
        return cls(response_id,
                   error,
                   documents)
