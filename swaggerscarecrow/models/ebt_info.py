# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class EbtInfo(object):

    """Implementation of the 'EbtInfo' model.

    TODO: type model description here.

    Attributes:
        se_number (string): EBT Service Establishment number
        authorization_fee (float): EBT authorization fee to apply

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "se_number": 'seNumber',
        "authorization_fee": 'authorizationFee'
    }

    _optionals = [
        'authorization_fee',
    ]

    def __init__(self,
                 se_number=None,
                 authorization_fee=APIHelper.SKIP):
        """Constructor for the EbtInfo class"""

        # Initialize members of the class
        self.se_number = se_number 
        if authorization_fee is not APIHelper.SKIP:
            self.authorization_fee = authorization_fee 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        se_number = dictionary.get("seNumber") if dictionary.get("seNumber") else None
        authorization_fee = dictionary.get("authorizationFee") if dictionary.get("authorizationFee") else APIHelper.SKIP
        # Return an object of this model
        return cls(se_number,
                   authorization_fee)
