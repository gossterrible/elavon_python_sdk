# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class HealthCareEligibilityInfo(object):

    """Implementation of the 'HealthCareEligibilityInfo' model.

    TODO: type model description here.

    Attributes:
        monthly_fee (float): TODO: type description here.
        npi_numbers (list of string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "monthly_fee": 'monthlyFee',
        "npi_numbers": 'npiNumbers'
    }

    _optionals = [
        'monthly_fee',
        'npi_numbers',
    ]

    def __init__(self,
                 monthly_fee=APIHelper.SKIP,
                 npi_numbers=APIHelper.SKIP):
        """Constructor for the HealthCareEligibilityInfo class"""

        # Initialize members of the class
        if monthly_fee is not APIHelper.SKIP:
            self.monthly_fee = monthly_fee 
        if npi_numbers is not APIHelper.SKIP:
            self.npi_numbers = npi_numbers 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        monthly_fee = dictionary.get("monthlyFee") if dictionary.get("monthlyFee") else APIHelper.SKIP
        npi_numbers = dictionary.get("npiNumbers") if dictionary.get("npiNumbers") else APIHelper.SKIP
        # Return an object of this model
        return cls(monthly_fee,
                   npi_numbers)
