# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class RevenueShareInfo(object):

    """Implementation of the 'RevenueShareInfo' model.

    TODO: type model description here.

    Attributes:
        secondary_sales_person (string): Sales person representative code for
            secondary sales person
        split_percentage (string): Percentage split allocated for secondary

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "secondary_sales_person": 'secondarySalesPerson',
        "split_percentage": 'splitPercentage'
    }

    def __init__(self,
                 secondary_sales_person=None,
                 split_percentage=None):
        """Constructor for the RevenueShareInfo class"""

        # Initialize members of the class
        self.secondary_sales_person = secondary_sales_person 
        self.split_percentage = split_percentage 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        secondary_sales_person = dictionary.get("secondarySalesPerson") if dictionary.get("secondarySalesPerson") else None
        split_percentage = dictionary.get("splitPercentage") if dictionary.get("splitPercentage") else None
        # Return an object of this model
        return cls(secondary_sales_person,
                   split_percentage)
