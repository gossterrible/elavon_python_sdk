# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class AdditionalDescriptionInfo(object):

    """Implementation of the 'AdditionalDescriptionInfo' model.

    TODO: type model description here.

    Attributes:
        previous_processor_description (string): Additional description of
            customer's previous payment processor
        monetary_pricing_program_description (string): Additional description
            of application's monetary pricing program (MPP)
        referrer_reference_description (string): Additional description of
            referrer reference
        notes (string): Free text notes for additional information

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "previous_processor_description": 'previousProcessorDescription',
        "monetary_pricing_program_description": 'monetaryPricingProgramDescription',
        "referrer_reference_description": 'referrerReferenceDescription',
        "notes": 'notes'
    }

    _optionals = [
        'previous_processor_description',
        'monetary_pricing_program_description',
        'referrer_reference_description',
        'notes',
    ]

    def __init__(self,
                 previous_processor_description=APIHelper.SKIP,
                 monetary_pricing_program_description=APIHelper.SKIP,
                 referrer_reference_description=APIHelper.SKIP,
                 notes=APIHelper.SKIP):
        """Constructor for the AdditionalDescriptionInfo class"""

        # Initialize members of the class
        if previous_processor_description is not APIHelper.SKIP:
            self.previous_processor_description = previous_processor_description 
        if monetary_pricing_program_description is not APIHelper.SKIP:
            self.monetary_pricing_program_description = monetary_pricing_program_description 
        if referrer_reference_description is not APIHelper.SKIP:
            self.referrer_reference_description = referrer_reference_description 
        if notes is not APIHelper.SKIP:
            self.notes = notes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        previous_processor_description = dictionary.get("previousProcessorDescription") if dictionary.get("previousProcessorDescription") else APIHelper.SKIP
        monetary_pricing_program_description = dictionary.get("monetaryPricingProgramDescription") if dictionary.get("monetaryPricingProgramDescription") else APIHelper.SKIP
        referrer_reference_description = dictionary.get("referrerReferenceDescription") if dictionary.get("referrerReferenceDescription") else APIHelper.SKIP
        notes = dictionary.get("notes") if dictionary.get("notes") else APIHelper.SKIP
        # Return an object of this model
        return cls(previous_processor_description,
                   monetary_pricing_program_description,
                   referrer_reference_description,
                   notes)
