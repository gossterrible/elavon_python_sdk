# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper
from swaggerscarecrow.models.ach_check_questions import AchCheckQuestions


class ElectronicCheckService(object):

    """Implementation of the 'ElectronicCheckService' model.

    TODO: type model description here.

    Attributes:
        reporting_fee (float): TODO: type description here.
        reporting_num_users (string): TODO: type description here.
        ach_check_questions (AchCheckQuestions): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reporting_fee": 'reportingFee',
        "reporting_num_users": 'reportingNumUsers',
        "ach_check_questions": 'achCheckQuestions'
    }

    _optionals = [
        'reporting_fee',
        'reporting_num_users',
        'ach_check_questions',
    ]

    def __init__(self,
                 reporting_fee=APIHelper.SKIP,
                 reporting_num_users=APIHelper.SKIP,
                 ach_check_questions=APIHelper.SKIP):
        """Constructor for the ElectronicCheckService class"""

        # Initialize members of the class
        if reporting_fee is not APIHelper.SKIP:
            self.reporting_fee = reporting_fee 
        if reporting_num_users is not APIHelper.SKIP:
            self.reporting_num_users = reporting_num_users 
        if ach_check_questions is not APIHelper.SKIP:
            self.ach_check_questions = ach_check_questions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        reporting_fee = dictionary.get("reportingFee") if dictionary.get("reportingFee") else APIHelper.SKIP
        reporting_num_users = dictionary.get("reportingNumUsers") if dictionary.get("reportingNumUsers") else APIHelper.SKIP
        ach_check_questions = AchCheckQuestions.from_dictionary(dictionary.get('achCheckQuestions')) if 'achCheckQuestions' in dictionary.keys() else APIHelper.SKIP 
        # Return an object of this model
        return cls(reporting_fee,
                   reporting_num_users,
                   ach_check_questions)
