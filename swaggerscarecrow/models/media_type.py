# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class MediaType(object):

    """Implementation of the 'MediaType' model.

    TODO: type model description here.

    Attributes:
        mtype (string): TODO: type description here.
        subtype (string): TODO: type description here.
        parameters (dict): TODO: type description here.
        wildcard_type (bool): TODO: type description here.
        wildcard_subtype (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "subtype": 'subtype',
        "parameters": 'parameters',
        "wildcard_type": 'wildcardType',
        "wildcard_subtype": 'wildcardSubtype'
    }

    _optionals = [
        'mtype',
        'subtype',
        'parameters',
        'wildcard_type',
        'wildcard_subtype',
    ]

    def __init__(self,
                 mtype=APIHelper.SKIP,
                 subtype=APIHelper.SKIP,
                 parameters=APIHelper.SKIP,
                 wildcard_type=APIHelper.SKIP,
                 wildcard_subtype=APIHelper.SKIP):
        """Constructor for the MediaType class"""

        # Initialize members of the class
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if subtype is not APIHelper.SKIP:
            self.subtype = subtype 
        if parameters is not APIHelper.SKIP:
            self.parameters = parameters 
        if wildcard_type is not APIHelper.SKIP:
            self.wildcard_type = wildcard_type 
        if wildcard_subtype is not APIHelper.SKIP:
            self.wildcard_subtype = wildcard_subtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        subtype = dictionary.get("subtype") if dictionary.get("subtype") else APIHelper.SKIP
        parameters = dictionary.get("parameters") if dictionary.get("parameters") else APIHelper.SKIP
        wildcard_type = dictionary.get("wildcardType") if "wildcardType" in dictionary.keys() else APIHelper.SKIP
        wildcard_subtype = dictionary.get("wildcardSubtype") if "wildcardSubtype" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(mtype,
                   subtype,
                   parameters,
                   wildcard_type,
                   wildcard_subtype)
