# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class TerminalIdData(object):

    """Implementation of the 'TerminalIdData' model.

    TODO: type model description here.

    Attributes:
        terminal_id (string): Terminal Ids
        user_id (string): Converge User Id
        pin (string): Converge PIN
        error_text (string): Any error that arose while processing results

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "terminal_id": 'terminalId',
        "user_id": 'userId',
        "pin": 'pin',
        "error_text": 'errorText'
    }

    _optionals = [
        'terminal_id',
        'user_id',
        'pin',
        'error_text',
    ]

    def __init__(self,
                 terminal_id=APIHelper.SKIP,
                 user_id=APIHelper.SKIP,
                 pin=APIHelper.SKIP,
                 error_text=APIHelper.SKIP):
        """Constructor for the TerminalIdData class"""

        # Initialize members of the class
        if terminal_id is not APIHelper.SKIP:
            self.terminal_id = terminal_id 
        if user_id is not APIHelper.SKIP:
            self.user_id = user_id 
        if pin is not APIHelper.SKIP:
            self.pin = pin 
        if error_text is not APIHelper.SKIP:
            self.error_text = error_text 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        terminal_id = dictionary.get("terminalId") if dictionary.get("terminalId") else APIHelper.SKIP
        user_id = dictionary.get("userId") if dictionary.get("userId") else APIHelper.SKIP
        pin = dictionary.get("pin") if dictionary.get("pin") else APIHelper.SKIP
        error_text = dictionary.get("errorText") if dictionary.get("errorText") else APIHelper.SKIP
        # Return an object of this model
        return cls(terminal_id,
                   user_id,
                   pin,
                   error_text)
