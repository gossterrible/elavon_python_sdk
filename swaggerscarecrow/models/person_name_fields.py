# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class PersonNameFields(object):

    """Implementation of the 'PersonNameFields' model.

    TODO: type model description here.

    Attributes:
        person_identifier (string): TODO: type description here.
        simple_value (string): TODO: type description here.
        title (string): TODO: type description here.
        first_name (string): TODO: type description here.
        middle_name (string): TODO: type description here.
        last_name (string): TODO: type description here.
        suffix (string): TODO: type description here.
        nick_name (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "person_identifier": 'personIdentifier',
        "simple_value": 'simpleValue',
        "title": 'title',
        "first_name": 'firstName',
        "middle_name": 'middleName',
        "last_name": 'lastName',
        "suffix": 'suffix',
        "nick_name": 'nickName'
    }

    _optionals = [
        'person_identifier',
        'simple_value',
        'title',
        'first_name',
        'middle_name',
        'last_name',
        'suffix',
        'nick_name',
    ]

    def __init__(self,
                 person_identifier=APIHelper.SKIP,
                 simple_value=APIHelper.SKIP,
                 title=APIHelper.SKIP,
                 first_name=APIHelper.SKIP,
                 middle_name=APIHelper.SKIP,
                 last_name=APIHelper.SKIP,
                 suffix=APIHelper.SKIP,
                 nick_name=APIHelper.SKIP):
        """Constructor for the PersonNameFields class"""

        # Initialize members of the class
        if person_identifier is not APIHelper.SKIP:
            self.person_identifier = person_identifier 
        if simple_value is not APIHelper.SKIP:
            self.simple_value = simple_value 
        if title is not APIHelper.SKIP:
            self.title = title 
        if first_name is not APIHelper.SKIP:
            self.first_name = first_name 
        if middle_name is not APIHelper.SKIP:
            self.middle_name = middle_name 
        if last_name is not APIHelper.SKIP:
            self.last_name = last_name 
        if suffix is not APIHelper.SKIP:
            self.suffix = suffix 
        if nick_name is not APIHelper.SKIP:
            self.nick_name = nick_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        person_identifier = dictionary.get("personIdentifier") if dictionary.get("personIdentifier") else APIHelper.SKIP
        simple_value = dictionary.get("simpleValue") if dictionary.get("simpleValue") else APIHelper.SKIP
        title = dictionary.get("title") if dictionary.get("title") else APIHelper.SKIP
        first_name = dictionary.get("firstName") if dictionary.get("firstName") else APIHelper.SKIP
        middle_name = dictionary.get("middleName") if dictionary.get("middleName") else APIHelper.SKIP
        last_name = dictionary.get("lastName") if dictionary.get("lastName") else APIHelper.SKIP
        suffix = dictionary.get("suffix") if dictionary.get("suffix") else APIHelper.SKIP
        nick_name = dictionary.get("nickName") if dictionary.get("nickName") else APIHelper.SKIP
        # Return an object of this model
        return cls(person_identifier,
                   simple_value,
                   title,
                   first_name,
                   middle_name,
                   last_name,
                   suffix,
                   nick_name)
