# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class CompanySummary(object):

    """Implementation of the 'CompanySummary' model.

    TODO: type model description here.

    Attributes:
        company_id (string): TODO: type description here.
        business_name (string): TODO: type description here.
        country (string): TODO: type description here.
        country_code (string): TODO: type description here.
        company_registration_number (string): TODO: type description here.
        status (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "company_id": 'companyId',
        "business_name": 'businessName',
        "country": 'country',
        "country_code": 'countryCode',
        "company_registration_number": 'companyRegistrationNumber',
        "status": 'status'
    }

    _optionals = [
        'company_id',
        'business_name',
        'country',
        'country_code',
        'company_registration_number',
        'status',
    ]

    def __init__(self,
                 company_id=APIHelper.SKIP,
                 business_name=APIHelper.SKIP,
                 country=APIHelper.SKIP,
                 country_code=APIHelper.SKIP,
                 company_registration_number=APIHelper.SKIP,
                 status=APIHelper.SKIP):
        """Constructor for the CompanySummary class"""

        # Initialize members of the class
        if company_id is not APIHelper.SKIP:
            self.company_id = company_id 
        if business_name is not APIHelper.SKIP:
            self.business_name = business_name 
        if country is not APIHelper.SKIP:
            self.country = country 
        if country_code is not APIHelper.SKIP:
            self.country_code = country_code 
        if company_registration_number is not APIHelper.SKIP:
            self.company_registration_number = company_registration_number 
        if status is not APIHelper.SKIP:
            self.status = status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        company_id = dictionary.get("companyId") if dictionary.get("companyId") else APIHelper.SKIP
        business_name = dictionary.get("businessName") if dictionary.get("businessName") else APIHelper.SKIP
        country = dictionary.get("country") if dictionary.get("country") else APIHelper.SKIP
        country_code = dictionary.get("countryCode") if dictionary.get("countryCode") else APIHelper.SKIP
        company_registration_number = dictionary.get("companyRegistrationNumber") if dictionary.get("companyRegistrationNumber") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        # Return an object of this model
        return cls(company_id,
                   business_name,
                   country,
                   country_code,
                   company_registration_number,
                   status)
