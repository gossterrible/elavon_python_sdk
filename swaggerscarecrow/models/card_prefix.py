# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CardPrefix(object):

    """Implementation of the 'CardPrefix' model.

    TODO: type model description here.

    Attributes:
        card_type (CardTypeEnum): Type of card
        prefix (string): Prefix of card

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "card_type": 'cardType',
        "prefix": 'prefix'
    }

    def __init__(self,
                 card_type=None,
                 prefix=None):
        """Constructor for the CardPrefix class"""

        # Initialize members of the class
        self.card_type = card_type 
        self.prefix = prefix 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        card_type = dictionary.get("cardType") if dictionary.get("cardType") else None
        prefix = dictionary.get("prefix") if dictionary.get("prefix") else None
        # Return an object of this model
        return cls(card_type,
                   prefix)
