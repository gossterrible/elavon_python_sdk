# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class UserDocumentInfo(object):

    """Implementation of the 'UserDocumentInfo' model.

    TODO: type model description here.

    Attributes:
        content_type (ContentTypeEnum): TODO: type description here.
        sign_type (SignTypeEnum): TODO: type description here.
        context_type (ContextTypeEnum): TODO: type description here.
        agreement_snippet (bool): TODO: type description here.
        partner_document_descriptions (dict): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "content_type": 'contentType',
        "sign_type": 'signType',
        "context_type": 'contextType',
        "agreement_snippet": 'agreementSnippet',
        "partner_document_descriptions": 'partnerDocumentDescriptions'
    }

    _optionals = [
        'content_type',
        'sign_type',
        'context_type',
        'agreement_snippet',
        'partner_document_descriptions',
    ]

    def __init__(self,
                 content_type=APIHelper.SKIP,
                 sign_type=APIHelper.SKIP,
                 context_type=APIHelper.SKIP,
                 agreement_snippet=APIHelper.SKIP,
                 partner_document_descriptions=APIHelper.SKIP):
        """Constructor for the UserDocumentInfo class"""

        # Initialize members of the class
        if content_type is not APIHelper.SKIP:
            self.content_type = content_type 
        if sign_type is not APIHelper.SKIP:
            self.sign_type = sign_type 
        if context_type is not APIHelper.SKIP:
            self.context_type = context_type 
        if agreement_snippet is not APIHelper.SKIP:
            self.agreement_snippet = agreement_snippet 
        if partner_document_descriptions is not APIHelper.SKIP:
            self.partner_document_descriptions = partner_document_descriptions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        content_type = dictionary.get("contentType") if dictionary.get("contentType") else APIHelper.SKIP
        sign_type = dictionary.get("signType") if dictionary.get("signType") else APIHelper.SKIP
        context_type = dictionary.get("contextType") if dictionary.get("contextType") else APIHelper.SKIP
        agreement_snippet = dictionary.get("agreementSnippet") if "agreementSnippet" in dictionary.keys() else APIHelper.SKIP
        partner_document_descriptions = dictionary.get("partnerDocumentDescriptions") if dictionary.get("partnerDocumentDescriptions") else APIHelper.SKIP
        # Return an object of this model
        return cls(content_type,
                   sign_type,
                   context_type,
                   agreement_snippet,
                   partner_document_descriptions)
