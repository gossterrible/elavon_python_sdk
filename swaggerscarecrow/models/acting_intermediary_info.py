# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class ActingIntermediaryInfo(object):

    """Implementation of the 'ActingIntermediaryInfo' model.

    TODO: type model description here.

    Attributes:
        acting_intermediary_name (string): TODO: type description here.
        acting_intermediary_type (ActingIntermediaryTypeEnum): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "acting_intermediary_name": 'actingIntermediaryName',
        "acting_intermediary_type": 'actingIntermediaryType'
    }

    _optionals = [
        'acting_intermediary_name',
        'acting_intermediary_type',
    ]

    def __init__(self,
                 acting_intermediary_name=APIHelper.SKIP,
                 acting_intermediary_type=APIHelper.SKIP):
        """Constructor for the ActingIntermediaryInfo class"""

        # Initialize members of the class
        if acting_intermediary_name is not APIHelper.SKIP:
            self.acting_intermediary_name = acting_intermediary_name 
        if acting_intermediary_type is not APIHelper.SKIP:
            self.acting_intermediary_type = acting_intermediary_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        acting_intermediary_name = dictionary.get("actingIntermediaryName") if dictionary.get("actingIntermediaryName") else APIHelper.SKIP
        acting_intermediary_type = dictionary.get("actingIntermediaryType") if dictionary.get("actingIntermediaryType") else APIHelper.SKIP
        # Return an object of this model
        return cls(acting_intermediary_name,
                   acting_intermediary_type)
