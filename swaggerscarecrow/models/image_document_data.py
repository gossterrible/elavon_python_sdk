# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.models.image_document import ImageDocument


class ImageDocumentData(object):

    """Implementation of the 'ImageDocumentData' model.

    TODO: type model description here.

    Attributes:
        doc_reference_number (string): Unique identifier of document data,
            alphanumeric
        image_documents (list of ImageDocument): Listing of documents to be
            uploaded

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "doc_reference_number": 'docReferenceNumber',
        "image_documents": 'imageDocuments'
    }

    def __init__(self,
                 doc_reference_number=None,
                 image_documents=None):
        """Constructor for the ImageDocumentData class"""

        # Initialize members of the class
        self.doc_reference_number = doc_reference_number 
        self.image_documents = image_documents 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        doc_reference_number = dictionary.get("docReferenceNumber") if dictionary.get("docReferenceNumber") else None
        image_documents = None
        if dictionary.get('imageDocuments') is not None:
            image_documents = [ImageDocument.from_dictionary(x) for x in dictionary.get('imageDocuments')]
        # Return an object of this model
        return cls(doc_reference_number,
                   image_documents)
