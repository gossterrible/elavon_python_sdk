# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class VatInvoiceStatement(object):

    """Implementation of the 'VatInvoiceStatement' model.

    TODO: type model description here.

    Attributes:
        mtype (Type5Enum): VAT Invoice statement format type
        media (Media3Enum): VAT Invoice statement media type
        address_type (AddressTypeEnum): [NA] Billing statement address,
            required should type and media indicate a mailed form

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "media": 'media',
        "address_type": 'addressType'
    }

    _optionals = [
        'address_type',
    ]

    def __init__(self,
                 mtype=None,
                 media=None,
                 address_type=APIHelper.SKIP):
        """Constructor for the VatInvoiceStatement class"""

        # Initialize members of the class
        self.mtype = mtype 
        self.media = media 
        if address_type is not APIHelper.SKIP:
            self.address_type = address_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mtype = dictionary.get("type") if dictionary.get("type") else None
        media = dictionary.get("media") if dictionary.get("media") else None
        address_type = dictionary.get("addressType") if dictionary.get("addressType") else APIHelper.SKIP
        # Return an object of this model
        return cls(mtype,
                   media,
                   address_type)
