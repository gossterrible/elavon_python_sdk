# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class ValidateZipCodeRequest(object):

    """Implementation of the 'ValidateZipCodeRequest' model.

    TODO: type model description here.

    Attributes:
        zip_code (string): Postal code/Zip code to be validated
        city (string): Optional city value related to postal code/zip code
        country (string): Country of postal code/zip code origin, ISO 3166-1
            alpha-3 standard applies

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "zip_code": 'zipCode',
        "country": 'country',
        "city": 'city'
    }

    _optionals = [
        'city',
    ]

    def __init__(self,
                 zip_code=None,
                 country=None,
                 city=APIHelper.SKIP):
        """Constructor for the ValidateZipCodeRequest class"""

        # Initialize members of the class
        self.zip_code = zip_code 
        if city is not APIHelper.SKIP:
            self.city = city 
        self.country = country 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        zip_code = dictionary.get("zipCode") if dictionary.get("zipCode") else None
        country = dictionary.get("country") if dictionary.get("country") else None
        city = dictionary.get("city") if dictionary.get("city") else APIHelper.SKIP
        # Return an object of this model
        return cls(zip_code,
                   country,
                   city)
