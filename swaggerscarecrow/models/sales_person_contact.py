# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.models.name import Name
from swaggerscarecrow.models.phone_number import PhoneNumber


class SalesPersonContact(object):

    """Implementation of the 'SalesPersonContact' model.

    TODO: type model description here.

    Attributes:
        name (Name): TODO: type description here.
        phone (PhoneNumber): TODO: type description here.
        email_address (string): Contact email address of sales person

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "phone": 'phone',
        "email_address": 'emailAddress'
    }

    def __init__(self,
                 name=None,
                 phone=None,
                 email_address=None):
        """Constructor for the SalesPersonContact class"""

        # Initialize members of the class
        self.name = name 
        self.phone = phone 
        self.email_address = email_address 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        name = Name.from_dictionary(dictionary.get('name')) if dictionary.get('name') else None
        phone = PhoneNumber.from_dictionary(dictionary.get('phone')) if dictionary.get('phone') else None
        email_address = dictionary.get("emailAddress") if dictionary.get("emailAddress") else None
        # Return an object of this model
        return cls(name,
                   phone,
                   email_address)
