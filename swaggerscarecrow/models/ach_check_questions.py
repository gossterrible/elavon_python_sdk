# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class AchCheckQuestions(object):

    """Implementation of the 'AchCheckQuestions' model.

    TODO: type model description here.

    Attributes:
        payment_acceptance_type (string): TODO: type description here.
        prior_acceptance_authorization (bool): TODO: type description here.
        customer_identification (bool): TODO: type description here.
        ach_customer_type (AchCustomerTypeEnum): TODO: type description here.
        maintain_and_disclose_cancel (bool): TODO: type description here.
        ensure_accurate_transaction_info (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "payment_acceptance_type": 'paymentAcceptanceType',
        "prior_acceptance_authorization": 'priorAcceptanceAuthorization',
        "customer_identification": 'customerIdentification',
        "ach_customer_type": 'achCustomerType',
        "maintain_and_disclose_cancel": 'maintainAndDiscloseCancel',
        "ensure_accurate_transaction_info": 'ensureAccurateTransactionInfo'
    }

    _optionals = [
        'payment_acceptance_type',
        'prior_acceptance_authorization',
        'customer_identification',
        'ach_customer_type',
        'maintain_and_disclose_cancel',
        'ensure_accurate_transaction_info',
    ]

    def __init__(self,
                 payment_acceptance_type=APIHelper.SKIP,
                 prior_acceptance_authorization=APIHelper.SKIP,
                 customer_identification=APIHelper.SKIP,
                 ach_customer_type=APIHelper.SKIP,
                 maintain_and_disclose_cancel=APIHelper.SKIP,
                 ensure_accurate_transaction_info=APIHelper.SKIP):
        """Constructor for the AchCheckQuestions class"""

        # Initialize members of the class
        if payment_acceptance_type is not APIHelper.SKIP:
            self.payment_acceptance_type = payment_acceptance_type 
        if prior_acceptance_authorization is not APIHelper.SKIP:
            self.prior_acceptance_authorization = prior_acceptance_authorization 
        if customer_identification is not APIHelper.SKIP:
            self.customer_identification = customer_identification 
        if ach_customer_type is not APIHelper.SKIP:
            self.ach_customer_type = ach_customer_type 
        if maintain_and_disclose_cancel is not APIHelper.SKIP:
            self.maintain_and_disclose_cancel = maintain_and_disclose_cancel 
        if ensure_accurate_transaction_info is not APIHelper.SKIP:
            self.ensure_accurate_transaction_info = ensure_accurate_transaction_info 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        payment_acceptance_type = dictionary.get("paymentAcceptanceType") if dictionary.get("paymentAcceptanceType") else APIHelper.SKIP
        prior_acceptance_authorization = dictionary.get("priorAcceptanceAuthorization") if "priorAcceptanceAuthorization" in dictionary.keys() else APIHelper.SKIP
        customer_identification = dictionary.get("customerIdentification") if "customerIdentification" in dictionary.keys() else APIHelper.SKIP
        ach_customer_type = dictionary.get("achCustomerType") if dictionary.get("achCustomerType") else APIHelper.SKIP
        maintain_and_disclose_cancel = dictionary.get("maintainAndDiscloseCancel") if "maintainAndDiscloseCancel" in dictionary.keys() else APIHelper.SKIP
        ensure_accurate_transaction_info = dictionary.get("ensureAccurateTransactionInfo") if "ensureAccurateTransactionInfo" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(payment_acceptance_type,
                   prior_acceptance_authorization,
                   customer_identification,
                   ach_customer_type,
                   maintain_and_disclose_cancel,
                   ensure_accurate_transaction_info)
