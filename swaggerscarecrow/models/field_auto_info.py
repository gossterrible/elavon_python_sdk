# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class FieldAutoInfo(object):

    """Implementation of the 'FieldAutoInfo' model.

    TODO: type model description here.

    Attributes:
        requested (bool): If field automation was requested
        applied (bool): If field auomation was applied successfully
        monitored (bool): Indicator if field automated fields should be
            monitored for changes
        values_modified (bool): Indicator if field automated fields were
            modified
        field_auto_reference_id (string): ccih field automation reference id
            or company id

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "requested": 'requested',
        "applied": 'applied',
        "monitored": 'monitored',
        "values_modified": 'valuesModified',
        "field_auto_reference_id": 'fieldAutoReferenceId'
    }

    _optionals = [
        'requested',
        'applied',
        'monitored',
        'values_modified',
        'field_auto_reference_id',
    ]

    def __init__(self,
                 requested=APIHelper.SKIP,
                 applied=APIHelper.SKIP,
                 monitored=APIHelper.SKIP,
                 values_modified=APIHelper.SKIP,
                 field_auto_reference_id=APIHelper.SKIP):
        """Constructor for the FieldAutoInfo class"""

        # Initialize members of the class
        if requested is not APIHelper.SKIP:
            self.requested = requested 
        if applied is not APIHelper.SKIP:
            self.applied = applied 
        if monitored is not APIHelper.SKIP:
            self.monitored = monitored 
        if values_modified is not APIHelper.SKIP:
            self.values_modified = values_modified 
        if field_auto_reference_id is not APIHelper.SKIP:
            self.field_auto_reference_id = field_auto_reference_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        requested = dictionary.get("requested") if "requested" in dictionary.keys() else APIHelper.SKIP
        applied = dictionary.get("applied") if "applied" in dictionary.keys() else APIHelper.SKIP
        monitored = dictionary.get("monitored") if "monitored" in dictionary.keys() else APIHelper.SKIP
        values_modified = dictionary.get("valuesModified") if "valuesModified" in dictionary.keys() else APIHelper.SKIP
        field_auto_reference_id = dictionary.get("fieldAutoReferenceId") if dictionary.get("fieldAutoReferenceId") else APIHelper.SKIP
        # Return an object of this model
        return cls(requested,
                   applied,
                   monitored,
                   values_modified,
                   field_auto_reference_id)
