# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class AlternateAddressInfo(object):

    """Implementation of the 'AlternateAddressInfo' model.

    Used to hold information about an alternative business address

    Attributes:
        document_needed (bool): Flag indicating if documentation is needed in
            Alternate Address Verification
        document_verified (bool): Flag indicating if document provided have
            been verified
        alternate_address_document_type (AlternateAddressDocumentTypeEnum):
            Type of document provided
        document_name (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "document_needed": 'documentNeeded',
        "document_verified": 'documentVerified',
        "alternate_address_document_type": 'alternateAddressDocumentType',
        "document_name": 'documentName'
    }

    _optionals = [
        'document_verified',
        'alternate_address_document_type',
        'document_name',
    ]

    def __init__(self,
                 document_needed=None,
                 document_verified=APIHelper.SKIP,
                 alternate_address_document_type=APIHelper.SKIP,
                 document_name=APIHelper.SKIP):
        """Constructor for the AlternateAddressInfo class"""

        # Initialize members of the class
        self.document_needed = document_needed 
        if document_verified is not APIHelper.SKIP:
            self.document_verified = document_verified 
        if alternate_address_document_type is not APIHelper.SKIP:
            self.alternate_address_document_type = alternate_address_document_type 
        if document_name is not APIHelper.SKIP:
            self.document_name = document_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        document_needed = dictionary.get("documentNeeded") if "documentNeeded" in dictionary.keys() else None
        document_verified = dictionary.get("documentVerified") if "documentVerified" in dictionary.keys() else APIHelper.SKIP
        alternate_address_document_type = dictionary.get("alternateAddressDocumentType") if dictionary.get("alternateAddressDocumentType") else APIHelper.SKIP
        document_name = dictionary.get("documentName") if dictionary.get("documentName") else APIHelper.SKIP
        # Return an object of this model
        return cls(document_needed,
                   document_verified,
                   alternate_address_document_type,
                   document_name)
