# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper
from swaggerscarecrow.models.date_components import DateComponents


class EquipmentOption(object):

    """Implementation of the 'EquipmentOption' model.

    TODO: type model description here.

    Attributes:
        integrator_code (string): TODO: type description here.
        ciers_number (string): TODO: type description here.
        serial_number (string): TODO: type description here.
        model_number (string): TODO: type description here.
        ecr_type (EcrTypeEnum): TODO: type description here.
        ecr_mode (EcrModeEnum): TODO: type description here.
        print_via_ecr (bool): TODO: type description here.
        ecr_integrator (EcrIntegratorEnum): TODO: type description here.
        ecr_cable_type (EcrCableTypeEnum): TODO: type description here.
        epg_integration_type (EpgIntegrationTypeEnum): TODO: type description
            here.
        bax_number (string): TODO: type description here.
        bax_effective_date (DateComponents): A container that holds the date
            (day, month, and year)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "integrator_code": 'integratorCode',
        "ciers_number": 'ciersNumber',
        "serial_number": 'serialNumber',
        "model_number": 'modelNumber',
        "ecr_type": 'ecrType',
        "ecr_mode": 'ecrMode',
        "print_via_ecr": 'printViaEcr',
        "ecr_integrator": 'ecrIntegrator',
        "ecr_cable_type": 'ecrCableType',
        "epg_integration_type": 'epgIntegrationType',
        "bax_number": 'baxNumber',
        "bax_effective_date": 'baxEffectiveDate'
    }

    _optionals = [
        'integrator_code',
        'ciers_number',
        'serial_number',
        'model_number',
        'ecr_type',
        'ecr_mode',
        'print_via_ecr',
        'ecr_integrator',
        'ecr_cable_type',
        'epg_integration_type',
        'bax_number',
        'bax_effective_date',
    ]

    def __init__(self,
                 integrator_code=APIHelper.SKIP,
                 ciers_number=APIHelper.SKIP,
                 serial_number=APIHelper.SKIP,
                 model_number=APIHelper.SKIP,
                 ecr_type=APIHelper.SKIP,
                 ecr_mode=APIHelper.SKIP,
                 print_via_ecr=APIHelper.SKIP,
                 ecr_integrator=APIHelper.SKIP,
                 ecr_cable_type=APIHelper.SKIP,
                 epg_integration_type=APIHelper.SKIP,
                 bax_number=APIHelper.SKIP,
                 bax_effective_date=APIHelper.SKIP):
        """Constructor for the EquipmentOption class"""

        # Initialize members of the class
        if integrator_code is not APIHelper.SKIP:
            self.integrator_code = integrator_code 
        if ciers_number is not APIHelper.SKIP:
            self.ciers_number = ciers_number 
        if serial_number is not APIHelper.SKIP:
            self.serial_number = serial_number 
        if model_number is not APIHelper.SKIP:
            self.model_number = model_number 
        if ecr_type is not APIHelper.SKIP:
            self.ecr_type = ecr_type 
        if ecr_mode is not APIHelper.SKIP:
            self.ecr_mode = ecr_mode 
        if print_via_ecr is not APIHelper.SKIP:
            self.print_via_ecr = print_via_ecr 
        if ecr_integrator is not APIHelper.SKIP:
            self.ecr_integrator = ecr_integrator 
        if ecr_cable_type is not APIHelper.SKIP:
            self.ecr_cable_type = ecr_cable_type 
        if epg_integration_type is not APIHelper.SKIP:
            self.epg_integration_type = epg_integration_type 
        if bax_number is not APIHelper.SKIP:
            self.bax_number = bax_number 
        if bax_effective_date is not APIHelper.SKIP:
            self.bax_effective_date = bax_effective_date 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        integrator_code = dictionary.get("integratorCode") if dictionary.get("integratorCode") else APIHelper.SKIP
        ciers_number = dictionary.get("ciersNumber") if dictionary.get("ciersNumber") else APIHelper.SKIP
        serial_number = dictionary.get("serialNumber") if dictionary.get("serialNumber") else APIHelper.SKIP
        model_number = dictionary.get("modelNumber") if dictionary.get("modelNumber") else APIHelper.SKIP
        ecr_type = dictionary.get("ecrType") if dictionary.get("ecrType") else APIHelper.SKIP
        ecr_mode = dictionary.get("ecrMode") if dictionary.get("ecrMode") else APIHelper.SKIP
        print_via_ecr = dictionary.get("printViaEcr") if "printViaEcr" in dictionary.keys() else APIHelper.SKIP
        ecr_integrator = dictionary.get("ecrIntegrator") if dictionary.get("ecrIntegrator") else APIHelper.SKIP
        ecr_cable_type = dictionary.get("ecrCableType") if dictionary.get("ecrCableType") else APIHelper.SKIP
        epg_integration_type = dictionary.get("epgIntegrationType") if dictionary.get("epgIntegrationType") else APIHelper.SKIP
        bax_number = dictionary.get("baxNumber") if dictionary.get("baxNumber") else APIHelper.SKIP
        bax_effective_date = DateComponents.from_dictionary(dictionary.get('baxEffectiveDate')) if 'baxEffectiveDate' in dictionary.keys() else APIHelper.SKIP 
        # Return an object of this model
        return cls(integrator_code,
                   ciers_number,
                   serial_number,
                   model_number,
                   ecr_type,
                   ecr_mode,
                   print_via_ecr,
                   ecr_integrator,
                   ecr_cable_type,
                   epg_integration_type,
                   bax_number,
                   bax_effective_date)
