# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class VarOtherDetails(object):

    """Implementation of the 'VarOtherDetails' model.

    TODO: type model description here.

    Attributes:
        var_type (VarTypeEnum): TODO: type description here.
        vendor (string): TODO: type description here.
        product (string): TODO: type description here.
        version (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "var_type": 'varType',
        "vendor": 'vendor',
        "product": 'product',
        "version": 'version'
    }

    _optionals = [
        'var_type',
        'vendor',
        'product',
        'version',
    ]

    def __init__(self,
                 var_type=APIHelper.SKIP,
                 vendor=APIHelper.SKIP,
                 product=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the VarOtherDetails class"""

        # Initialize members of the class
        if var_type is not APIHelper.SKIP:
            self.var_type = var_type 
        if vendor is not APIHelper.SKIP:
            self.vendor = vendor 
        if product is not APIHelper.SKIP:
            self.product = product 
        if version is not APIHelper.SKIP:
            self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        var_type = dictionary.get("varType") if dictionary.get("varType") else APIHelper.SKIP
        vendor = dictionary.get("vendor") if dictionary.get("vendor") else APIHelper.SKIP
        product = dictionary.get("product") if dictionary.get("product") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        # Return an object of this model
        return cls(var_type,
                   vendor,
                   product,
                   version)
