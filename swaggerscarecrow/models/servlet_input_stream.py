# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class ServletInputStream(object):

    """Implementation of the 'ServletInputStream' model.

    TODO: type model description here.

    Attributes:
        ready (bool): TODO: type description here.
        finished (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ready": 'ready',
        "finished": 'finished'
    }

    _optionals = [
        'ready',
        'finished',
    ]

    def __init__(self,
                 ready=APIHelper.SKIP,
                 finished=APIHelper.SKIP):
        """Constructor for the ServletInputStream class"""

        # Initialize members of the class
        if ready is not APIHelper.SKIP:
            self.ready = ready 
        if finished is not APIHelper.SKIP:
            self.finished = finished 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ready = dictionary.get("ready") if "ready" in dictionary.keys() else APIHelper.SKIP
        finished = dictionary.get("finished") if "finished" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(ready,
                   finished)
