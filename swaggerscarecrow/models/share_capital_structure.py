# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper
from swaggerscarecrow.models.company_share_holder import CompanyShareHolder


class ShareCapitalStructure(object):

    """Implementation of the 'ShareCapitalStructure' model.

    TODO: type model description here.

    Attributes:
        shareholders (list of CompanyShareHolder): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shareholders": 'shareholders'
    }

    _optionals = [
        'shareholders',
    ]

    def __init__(self,
                 shareholders=APIHelper.SKIP):
        """Constructor for the ShareCapitalStructure class"""

        # Initialize members of the class
        if shareholders is not APIHelper.SKIP:
            self.shareholders = shareholders 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        shareholders = None
        if dictionary.get('shareholders') is not None:
            shareholders = [CompanyShareHolder.from_dictionary(x) for x in dictionary.get('shareholders')]
        else:
            shareholders = APIHelper.SKIP
        # Return an object of this model
        return cls(shareholders)
