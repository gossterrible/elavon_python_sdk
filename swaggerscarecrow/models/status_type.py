# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class StatusType(object):

    """Implementation of the 'StatusType' model.

    TODO: type model description here.

    Attributes:
        family (FamilyEnum): TODO: type description here.
        status_code (int): TODO: type description here.
        reason_phrase (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "family": 'family',
        "status_code": 'statusCode',
        "reason_phrase": 'reasonPhrase'
    }

    _optionals = [
        'family',
        'status_code',
        'reason_phrase',
    ]

    def __init__(self,
                 family=APIHelper.SKIP,
                 status_code=APIHelper.SKIP,
                 reason_phrase=APIHelper.SKIP):
        """Constructor for the StatusType class"""

        # Initialize members of the class
        if family is not APIHelper.SKIP:
            self.family = family 
        if status_code is not APIHelper.SKIP:
            self.status_code = status_code 
        if reason_phrase is not APIHelper.SKIP:
            self.reason_phrase = reason_phrase 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        family = dictionary.get("family") if dictionary.get("family") else APIHelper.SKIP
        status_code = dictionary.get("statusCode") if dictionary.get("statusCode") else APIHelper.SKIP
        reason_phrase = dictionary.get("reasonPhrase") if dictionary.get("reasonPhrase") else APIHelper.SKIP
        # Return an object of this model
        return cls(family,
                   status_code,
                   reason_phrase)
