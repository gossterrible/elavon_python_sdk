# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class GetTerminalIdsResponse(object):

    """Implementation of the 'GetTerminalIdsResponse' model.

    TODO: type model description here.

    Attributes:
        response_id (int): TODO: type description here.
        error (string): If processing error occurs, will contain information,
            else will be empty or null
        welcome_url (string): Welcome to Converge URL, typically provided to
            costomer via email
        virtual_id (string): Virtual Id, for Converge
        terminal_bin (string): Terminal BIN
        terminal_id_data_map (dict): Map of item code to various Converge data
            properties

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "response_id": 'responseId',
        "error": 'error',
        "welcome_url": 'welcomeUrl',
        "virtual_id": 'virtualId',
        "terminal_bin": 'terminalBin',
        "terminal_id_data_map": 'terminalIdDataMap'
    }

    _optionals = [
        'response_id',
        'error',
        'welcome_url',
        'virtual_id',
        'terminal_bin',
        'terminal_id_data_map',
    ]

    def __init__(self,
                 response_id=APIHelper.SKIP,
                 error=APIHelper.SKIP,
                 welcome_url=APIHelper.SKIP,
                 virtual_id=APIHelper.SKIP,
                 terminal_bin=APIHelper.SKIP,
                 terminal_id_data_map=APIHelper.SKIP):
        """Constructor for the GetTerminalIdsResponse class"""

        # Initialize members of the class
        if response_id is not APIHelper.SKIP:
            self.response_id = response_id 
        if error is not APIHelper.SKIP:
            self.error = error 
        if welcome_url is not APIHelper.SKIP:
            self.welcome_url = welcome_url 
        if virtual_id is not APIHelper.SKIP:
            self.virtual_id = virtual_id 
        if terminal_bin is not APIHelper.SKIP:
            self.terminal_bin = terminal_bin 
        if terminal_id_data_map is not APIHelper.SKIP:
            self.terminal_id_data_map = terminal_id_data_map 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        response_id = dictionary.get("responseId") if dictionary.get("responseId") else APIHelper.SKIP
        error = dictionary.get("error") if dictionary.get("error") else APIHelper.SKIP
        welcome_url = dictionary.get("welcomeUrl") if dictionary.get("welcomeUrl") else APIHelper.SKIP
        virtual_id = dictionary.get("virtualId") if dictionary.get("virtualId") else APIHelper.SKIP
        terminal_bin = dictionary.get("terminalBin") if dictionary.get("terminalBin") else APIHelper.SKIP
        terminal_id_data_map = dictionary.get("terminalIdDataMap") if dictionary.get("terminalIdDataMap") else APIHelper.SKIP
        # Return an object of this model
        return cls(response_id,
                   error,
                   welcome_url,
                   virtual_id,
                   terminal_bin,
                   terminal_id_data_map)
