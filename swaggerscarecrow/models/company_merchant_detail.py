# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class CompanyMerchantDetail(object):

    """Implementation of the 'CompanyMerchantDetail' model.

    TODO: type model description here.

    Attributes:
        aml_exempt_class (string): TODO: type description here.
        full_dba_name (string): TODO: type description here.
        mcc_code (string): TODO: type description here.
        annual_revenue (string): TODO: type description here.
        tin_form_type (string): TODO: type description here.
        tax_w_8_ben_signed_date (datetime): TODO: type description here.
        tax_classification (string): TODO: type description here.
        tin_type (string): TODO: type description here.
        primary_busines_ops (string): TODO: type description here.
        country_of_formation (string): TODO: type description here.
        bo_exempt_status (string): TODO: type description here.
        w_9_cert_date (datetime): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "aml_exempt_class": 'amlExemptClass',
        "full_dba_name": 'fullDBAName',
        "mcc_code": 'mccCode',
        "annual_revenue": 'annualRevenue',
        "tin_form_type": 'tinFormType',
        "tax_w_8_ben_signed_date": 'taxW8BENSignedDate',
        "tax_classification": 'taxClassification',
        "tin_type": 'tinType',
        "primary_busines_ops": 'primaryBusinesOps',
        "country_of_formation": 'countryOfFormation',
        "bo_exempt_status": 'boExemptStatus',
        "w_9_cert_date": 'w9CertDate'
    }

    _optionals = [
        'aml_exempt_class',
        'full_dba_name',
        'mcc_code',
        'annual_revenue',
        'tin_form_type',
        'tax_w_8_ben_signed_date',
        'tax_classification',
        'tin_type',
        'primary_busines_ops',
        'country_of_formation',
        'bo_exempt_status',
        'w_9_cert_date',
    ]

    def __init__(self,
                 aml_exempt_class=APIHelper.SKIP,
                 full_dba_name=APIHelper.SKIP,
                 mcc_code=APIHelper.SKIP,
                 annual_revenue=APIHelper.SKIP,
                 tin_form_type=APIHelper.SKIP,
                 tax_w_8_ben_signed_date=APIHelper.SKIP,
                 tax_classification=APIHelper.SKIP,
                 tin_type=APIHelper.SKIP,
                 primary_busines_ops=APIHelper.SKIP,
                 country_of_formation=APIHelper.SKIP,
                 bo_exempt_status=APIHelper.SKIP,
                 w_9_cert_date=APIHelper.SKIP):
        """Constructor for the CompanyMerchantDetail class"""

        # Initialize members of the class
        if aml_exempt_class is not APIHelper.SKIP:
            self.aml_exempt_class = aml_exempt_class 
        if full_dba_name is not APIHelper.SKIP:
            self.full_dba_name = full_dba_name 
        if mcc_code is not APIHelper.SKIP:
            self.mcc_code = mcc_code 
        if annual_revenue is not APIHelper.SKIP:
            self.annual_revenue = annual_revenue 
        if tin_form_type is not APIHelper.SKIP:
            self.tin_form_type = tin_form_type 
        if tax_w_8_ben_signed_date is not APIHelper.SKIP:
            self.tax_w_8_ben_signed_date = APIHelper.RFC3339DateTime(tax_w_8_ben_signed_date) if tax_w_8_ben_signed_date else None 
        if tax_classification is not APIHelper.SKIP:
            self.tax_classification = tax_classification 
        if tin_type is not APIHelper.SKIP:
            self.tin_type = tin_type 
        if primary_busines_ops is not APIHelper.SKIP:
            self.primary_busines_ops = primary_busines_ops 
        if country_of_formation is not APIHelper.SKIP:
            self.country_of_formation = country_of_formation 
        if bo_exempt_status is not APIHelper.SKIP:
            self.bo_exempt_status = bo_exempt_status 
        if w_9_cert_date is not APIHelper.SKIP:
            self.w_9_cert_date = APIHelper.RFC3339DateTime(w_9_cert_date) if w_9_cert_date else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        aml_exempt_class = dictionary.get("amlExemptClass") if dictionary.get("amlExemptClass") else APIHelper.SKIP
        full_dba_name = dictionary.get("fullDBAName") if dictionary.get("fullDBAName") else APIHelper.SKIP
        mcc_code = dictionary.get("mccCode") if dictionary.get("mccCode") else APIHelper.SKIP
        annual_revenue = dictionary.get("annualRevenue") if dictionary.get("annualRevenue") else APIHelper.SKIP
        tin_form_type = dictionary.get("tinFormType") if dictionary.get("tinFormType") else APIHelper.SKIP
        tax_w_8_ben_signed_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("taxW8BENSignedDate")).datetime if dictionary.get("taxW8BENSignedDate") else APIHelper.SKIP
        tax_classification = dictionary.get("taxClassification") if dictionary.get("taxClassification") else APIHelper.SKIP
        tin_type = dictionary.get("tinType") if dictionary.get("tinType") else APIHelper.SKIP
        primary_busines_ops = dictionary.get("primaryBusinesOps") if dictionary.get("primaryBusinesOps") else APIHelper.SKIP
        country_of_formation = dictionary.get("countryOfFormation") if dictionary.get("countryOfFormation") else APIHelper.SKIP
        bo_exempt_status = dictionary.get("boExemptStatus") if dictionary.get("boExemptStatus") else APIHelper.SKIP
        w_9_cert_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("w9CertDate")).datetime if dictionary.get("w9CertDate") else APIHelper.SKIP
        # Return an object of this model
        return cls(aml_exempt_class,
                   full_dba_name,
                   mcc_code,
                   annual_revenue,
                   tin_form_type,
                   tax_w_8_ben_signed_date,
                   tax_classification,
                   tin_type,
                   primary_busines_ops,
                   country_of_formation,
                   bo_exempt_status,
                   w_9_cert_date)
