# -*- coding: utf-8 -*-

"""
swaggerscarecrow

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from swaggerscarecrow.api_helper import APIHelper


class PhoneNumber(object):

    """Implementation of the 'PhoneNumber' model.

    TODO: type model description here.

    Attributes:
        intl_code (string): Standard International calling code
        area_code (string): Area code of phone number
        number (string): The main phone number, not including the area code or
            International calling code
        extension (string): Phone extension number

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "area_code": 'areaCode',
        "number": 'number',
        "intl_code": 'intlCode',
        "extension": 'extension'
    }

    _optionals = [
        'intl_code',
        'extension',
    ]

    def __init__(self,
                 area_code=None,
                 number=None,
                 intl_code=APIHelper.SKIP,
                 extension=APIHelper.SKIP):
        """Constructor for the PhoneNumber class"""

        # Initialize members of the class
        if intl_code is not APIHelper.SKIP:
            self.intl_code = intl_code 
        self.area_code = area_code 
        self.number = number 
        if extension is not APIHelper.SKIP:
            self.extension = extension 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        area_code = dictionary.get("areaCode") if dictionary.get("areaCode") else None
        number = dictionary.get("number") if dictionary.get("number") else None
        intl_code = dictionary.get("intlCode") if dictionary.get("intlCode") else APIHelper.SKIP
        extension = dictionary.get("extension") if dictionary.get("extension") else APIHelper.SKIP
        # Return an object of this model
        return cls(area_code,
                   number,
                   intl_code,
                   extension)
